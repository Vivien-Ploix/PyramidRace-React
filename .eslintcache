[{"/home/vivien/next/projet_final/PyramidRace-React/src/index.jsx":"1","/home/vivien/next/projet_final/PyramidRace-React/src/redux/store.js":"2","/home/vivien/next/projet_final/PyramidRace-React/src/Components/Footer/index.jsx":"3","/home/vivien/next/projet_final/PyramidRace-React/src/Components/NavBar/index.jsx":"4","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/index.jsx":"5","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Signup/index.jsx":"6","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Login/index.jsx":"7","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/404/index.jsx":"8","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Victory/index.jsx":"9","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Team/index.jsx":"10","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Defeat/index.jsx":"11","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/index.jsx":"12","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/index.jsx":"13","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authReducer.js":"14","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authActions.js":"15","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authTypes.js":"16","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Modal/index.jsx":"17","/home/vivien/next/projet_final/PyramidRace-React/src/Components/Fetch/index.jsx":"18","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Countdown/index.jsx":"19","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/QuestionCard/index.jsx":"20","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/JumbotronGameInfos/index.jsx":"21","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/Jumbotron/index.jsx":"22","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/index.jsx":"23","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/HomeSection/index.jsx":"24","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Team/components/TeamCards/index.jsx":"25","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Team/components/Jumbotron/index.jsx":"26","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/index.jsx":"27","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/PlayerInfos/index.jsx":"28","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/GamePlayed/index.jsx":"29","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/PlayerInfos/ProgressBar/index.jsx":"30","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/PlayerSuggestion/index.jsx":"31","/home/vivien/next/projet_final/PyramidRace-React/src/Components/AudioPlayer/index.jsx":"32"},{"size":1953,"mtime":1608297332007,"results":"33","hashOfConfig":"34"},{"size":557,"mtime":1608239365419,"results":"35","hashOfConfig":"34"},{"size":709,"mtime":1608239365271,"results":"36","hashOfConfig":"34"},{"size":4831,"mtime":1608299907366,"results":"37","hashOfConfig":"34"},{"size":13796,"mtime":1608314653109,"results":"38","hashOfConfig":"34"},{"size":4344,"mtime":1608297331991,"results":"39","hashOfConfig":"34"},{"size":3776,"mtime":1608297331985,"results":"40","hashOfConfig":"34"},{"size":215,"mtime":1608302953059,"results":"41","hashOfConfig":"34"},{"size":133,"mtime":1608302084158,"results":"42","hashOfConfig":"34"},{"size":254,"mtime":1608239365401,"results":"43","hashOfConfig":"34"},{"size":567,"mtime":1608297331883,"results":"44","hashOfConfig":"34"},{"size":315,"mtime":1608239365324,"results":"45","hashOfConfig":"34"},{"size":245,"mtime":1608239365377,"results":"46","hashOfConfig":"34"},{"size":710,"mtime":1608239365414,"results":"47","hashOfConfig":"34"},{"size":328,"mtime":1608297332012,"results":"48","hashOfConfig":"34"},{"size":106,"mtime":1608297332019,"results":"49","hashOfConfig":"34"},{"size":2597,"mtime":1608302298054,"results":"50","hashOfConfig":"34"},{"size":941,"mtime":1608239601489,"results":"51","hashOfConfig":"34"},{"size":751,"mtime":1608303702875,"results":"52","hashOfConfig":"34"},{"size":1607,"mtime":1608297331956,"results":"53","hashOfConfig":"34"},{"size":1448,"mtime":1608297331907,"results":"54","hashOfConfig":"34"},{"size":4487,"mtime":1608297331980,"results":"55","hashOfConfig":"34"},{"size":4532,"mtime":1608297331901,"results":"56","hashOfConfig":"34"},{"size":3850,"mtime":1608239365368,"results":"57","hashOfConfig":"34"},{"size":2587,"mtime":1608297331996,"results":"58","hashOfConfig":"34"},{"size":1090,"mtime":1608239365390,"results":"59","hashOfConfig":"34"},{"size":3840,"mtime":1608297331912,"results":"60","hashOfConfig":"34"},{"size":987,"mtime":1608239365308,"results":"61","hashOfConfig":"34"},{"size":3432,"mtime":1608297331892,"results":"62","hashOfConfig":"34"},{"size":1325,"mtime":1608239365303,"results":"63","hashOfConfig":"34"},{"size":276,"mtime":1608239365316,"results":"64","hashOfConfig":"34"},{"size":685,"mtime":1608316098211,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1ukoblb",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"68"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/vivien/next/projet_final/PyramidRace-React/src/index.jsx",[],["147","148"],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/store.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Components/Footer/index.jsx",["149","150","151"],"import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer id=\"footer\" className=\"footer-area\">\r\n      <div className=\"footer-copyright\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"copyright text-center\">\r\n                <p className=\"text\">\r\n                  THP Project by <Link to=\"/team\">Les Incacahuètes !</Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Components/NavBar/index.jsx",["152","153","154","155","156","157","158"],"import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logoutSuccess } from \"../../redux/authentication/authActions\";\r\n\r\nconst NavBar = () => {\r\n  const tokenCookie = Cookies.get(\"token\");\r\n  const isLoggedIn = useSelector((state) => state.isLoggedIn);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickLogout = () => {\r\n    fetch(\"https://pyramid-race-api.herokuapp.com/logout\", {\r\n      method: \"delete\",\r\n      Bearer: {\r\n        token: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(Cookies.get(\"token\"));\r\n        Cookies.remove(\"token\");\r\n        dispatch(logoutSuccess());\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"isLoggedIn changed\");\r\n  }, [isLoggedIn]);\r\n\r\n  return (\r\n    <div className=\"navgition navgition-transparent\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <nav className=\"navbar navbar-expand-lg\">\r\n              <Link to=\"/\">\r\n                <img src=\"/assets/images/logo.svg\" alt=\"Logo\"></img>\r\n              </Link>\r\n              <button\r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbarOne\"\r\n                aria-controls=\"navbarOne\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n              >\r\n                <span className=\"toggler-icon\"></span>\r\n                <span className=\"toggler-icon\"></span>\r\n                <span className=\"toggler-icon\"></span>\r\n              </button>\r\n              <div\r\n                className=\"collapse navbar-collapse sub-menu-bar\"\r\n                id=\"navbarOne\"\r\n              >\r\n                <ul className=\"navbar-nav m-auto\">\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/\">Accueil</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"page-scroll\" href=\"/#information\">\r\n                      Informations\r\n                    </a>\r\n                  </li>\r\n                  {tokenCookie && (\r\n                    <>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/gameinfos\">Profil</Link>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/\" onClick={handleClickLogout}>\r\n                          Se déconnecter\r\n                        </Link>\r\n                      </li>\r\n                    </>\r\n                  )}\r\n                  {!tokenCookie && (\r\n                    <>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/sign-up\">S'inscrire</Link>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/login\">Se connecter</Link>\r\n                      </li>\r\n                    </>\r\n                  )}\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"navbar-social d-none d-sm-flex align-items-center\">\r\n                <span>NOS RESEAUX</span>\r\n                <ul>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://www.facebook.com/PyramidRace\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"lni-facebook-filled\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"https://twitter.com/RacePyramid\" target=\"_blank\">\r\n                      {\" \"}\r\n                      <i className=\"lni-twitter-original\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://www.instagram.com/pyramid.race/\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"lni-instagram-original\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://www.youtube.com/watch?v=RLoWrNB0fJE\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"lni lni-youtube\"></i>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/index.jsx",["159","160","161","162","163","164","165","166","167","168","169","170","171"],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Signup/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Login/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/404/index.jsx",["172"],"import React from \"react\";\nimport NotFoundImage from \"./assets/404.png\";\nimport \"./style.scss\";\n\nconst NotFound = () => {\n  return <img className=\"notFoundImage\" src={NotFoundImage} />;\n};\n\nexport default NotFound;\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Victory/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Team/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Defeat/index.jsx",["173","174","175","176"],"import \"./style.scss\";\nimport React from \"react\";\nimport GameOver from \"./assets/game_over.png\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nconst Defeat = () => {\n  return (\n    <div className=\"Defeat-Page\">\n      <h1 className=\"text-center\"> Tu as perdu, gros naze !</h1>\n      <br />\n      <button className=\"Defeat-button\">\n        <Link to=\"/gameInfos\">Revenir à mon profil ( En rampant )</Link>\n      </button>\n\n      <img className=\"defeat-image\" src={GameOver} />\n      <br />\n    </div>\n  );\n};\n\nexport default Defeat;\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authReducer.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authActions.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authTypes.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Modal/index.jsx",["177"],"import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement(\"#root\");\r\n\r\nconst ModalDiv = ({ modalIsOpen, closeModal, step }) => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        {step < 2 && (\r\n          <div className=\"col text-center\">\r\n            <h2>Meh, tu as atteint l'étage {step} de la pyramide...</h2>\r\n\r\n            <div>\r\n              C'est vraiment ridicule, ton adversaire n'aura aucun mal à te\r\n              vaincre... va te cacher !\r\n            </div>\r\n            <button className=\"btn btn-warning\" onClick={closeModal}>\r\n              Revenir à mon profil\r\n            </button>\r\n          </div>\r\n        )}\r\n        {step >= 2 && step <= 4 && (\r\n          <div className=\"col text-center\">\r\n            <h2>Pas mal,tu as atteint l'étage {step} de la pyramide !</h2>\r\n            <div>\r\n              Résultat honorable, voyons si ton adversaire peut faire mieux !\r\n            </div>\r\n            <button className=\"btn btn-warning\" onClick={closeModal}>\r\n              Revenir à mon profil\r\n            </button>\r\n          </div>\r\n        )}\r\n        {step === 5 && (\r\n          <div className=\"col text-center\">\r\n            <h2>Bravo ! Tu as atteint l'étage {step} de la pyramide !</h2>\r\n            <div>\r\n              Tu finis à une marche du sommet de la pyramide ! Belle\r\n              performance, ton adversaire va devoir se surpasser !\r\n            </div>\r\n            <button className=\"btn btn-warning\" onClick={closeModal}>\r\n              Revenir à mon profil\r\n            </button>\r\n          </div>\r\n        )}\r\n        {step === 6 && (\r\n          <div className=\"col text-center\">\r\n            <h2>Tu as atteint le sommet de la pyramide !!!</h2>\r\n            <div>\r\n              Bravo ! Le dieu-serpent est fier de toi ! Si ton adversaire ne\r\n              fait pas preuve d'autant de force, tu gagneras cette bataille !\r\n            </div>\r\n            <button className=\"btn btn-warning\" onClick={closeModal}>\r\n              Revenir à mon profil\r\n            </button>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalDiv;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Components/Fetch/index.jsx",["178"],"import React from \"react\";\nimport Cookie from \"js-cookie\";\n\nconst tokenCookie = Cookie.get(\"token\");\n\nexport const fetchOpponent = (playerId, setOpponent) => {\n  fetch(`https://pyramid-race-api.herokuapp.com/users/${playerId}`)\n    .then((response) => response.json())\n    .then((data) => setOpponent(data))\n    .catch((error) => console.log(error));\n};\n\nexport const updateScorePlayer = (playerId, initialScore, victoryStatus) => {\n  let updatedScore;\n  if (victoryStatus === true) {\n    updatedScore = initialScore + 5;\n  } else if (victoryStatus === false) {\n    updatedScore = initialScore - 3;\n  }\n  const data = {\n    user: {\n      score: updatedScore,\n    },\n  };\n  fetch(`https://pyramid-race-api.herokuapp.com/users/${playerId}`, {\n    method: \"put\",\n    headers: {\n      Authorization: `${tokenCookie}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).catch((error) => console.log(error));\n};\n",["179","180"],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Countdown/index.jsx",["181"],"import \"./style.scss\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useCountdownTimer } from \"use-countdown-timer\";\r\n\r\nconst Countdown = ({ onExpire, resetTick }) => {\r\n  const { countdown, reset, start } = useCountdownTimer({\r\n    timer: 1000 * 10,\r\n    autostart: true,\r\n    onExpire,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (resetTick === 0) {\r\n      return;\r\n    }\r\n    reset();\r\n    start();\r\n  }, [resetTick]);\r\n\r\n  return (\r\n    <div className=\"countdown-container\">\r\n      <div\r\n        id=\"clock-b\"\r\n        className=\"countdown-circles d-flex flex-wrap justify-content-center pt-4 mb-4\"\r\n      >\r\n        <span className=\"h3 font-weight-bold\">{countdown / 1000}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Countdown;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/QuestionCard/index.jsx",["182"],"import \"./style.scss\";\nimport React, { useEffect } from \"react\";\n\nconst QuestionCard = ({\n  question,\n  incorrect_answers,\n  correct_answer,\n  nextQuestion,\n}) => {\n  console.log(correct_answer);\n  const questionArray = incorrect_answers;\n  if (questionArray.length < 4) {\n    questionArray.push(correct_answer);\n  }\n\n  const shuffle = (array) => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  useEffect(() => {\n    shuffle(questionArray);\n  }, [correct_answer]);\n\n  return (\n    <>\n      <div className=\"question-card\">\n        <div className=\"card-body\">\n          <div className=\"card-text text-center\">\n            <h6 dangerouslySetInnerHTML={{ __html: question }} />\n            <br />\n            <div className=\"answers\">\n              {questionArray.map((choice) => {\n                return (\n                  <button\n                    className=\"answer-button btn btn-warning\"\n                    onClick={() => nextQuestion(choice, correct_answer)}\n                    key={questionArray.indexOf(choice)}\n                  >\n                    <p dangerouslySetInnerHTML={{ __html: choice }} />\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default QuestionCard;\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/JumbotronGameInfos/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/Jumbotron/index.jsx",["183","184"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Cookie from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Jumbotron = () => {\r\n  const userId = useSelector((state) => state.id);\r\n  const tokenCookie = Cookie.get(\"token\");\r\n  const history = useHistory();\r\n  const [possibleOpponents, setPossibleOpponents] = useState([]);\r\n  const [playerScore, setPlayerScore] = useState(0);\r\n\r\n  const categoriesArray = [\r\n    9,\r\n    10,\r\n    11,\r\n    12,\r\n    14,\r\n    15,\r\n    17,\r\n    18,\r\n    21,\r\n    22,\r\n    23,\r\n    27,\r\n    28,\r\n    31,\r\n    32,\r\n  ];\r\n\r\n  const fetchPossibleOpponents = () => {\r\n    fetch(\r\n      `https://pyramid-race-api.herokuapp.com/users/${userId}/possible_opponents`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setPossibleOpponents(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      fetchPossibleOpponents();\r\n      fetchPlayerScore();\r\n    }\r\n  }, []);\r\n\r\n  const startGame = () => {\r\n    let difficulty;\r\n    if (playerScore < 200) {\r\n      difficulty = \"easy\";\r\n    } else if (playerScore >= 200 && playerScore < 400) {\r\n      difficulty = \"medium\";\r\n    } else if (playerScore >= 400) {\r\n      difficulty = \"hard\";\r\n    }\r\n    console.log(difficulty);\r\n    const data = {\r\n      game: {\r\n        player1_id: userId,\r\n        player2_id:\r\n          possibleOpponents[\r\n            Math.floor(Math.random() * possibleOpponents.length)\r\n          ].id,\r\n        difficulty: difficulty,\r\n        category:\r\n          categoriesArray[Math.floor(Math.random() * categoriesArray.length)],\r\n      },\r\n    };\r\n\r\n    fetch(`https://pyramid-race-api.herokuapp.com/games`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Authorization: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        history.push(`/games/${response.id}`);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const fetchPlayerScore = () => {\r\n    fetch(`https://pyramid-race-api.herokuapp.com/users/${userId}/games`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let games_won = data.filter((game) => game.winner_id === userId).length;\r\n        let games_lost = data.filter(\r\n          (game) => game.winner_id != userId && game.winner_id !== null\r\n        ).length;\r\n        let playerScore = games_won * 5 - games_lost * 3;\r\n        setPlayerScore(playerScore);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"home\"\r\n      className=\"header-hero bg_cover\"\r\n      style={{ backgroundImage: `url(${\"assets/images/header-bg.jpg\"})` }}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xl-8 col-lg-10\">\r\n            <div className=\"header-content text-center\">\r\n              <h3 className=\"header-title\">\r\n                Bienvenue sur Pyramid <em>Race</em> !\r\n              </h3>\r\n              <h2>Confronte ta culture générale avec d'autres joueurs !</h2>\r\n              <p className=\"text\">\r\n                Prouve que tu es le meilleur en atteignant le haut de la\r\n                pyramide ou tu erreras dans ses labyrinthes jusqu'à ce que tu te\r\n                transformes en burrito avarié !\r\n              </p>\r\n              <ul className=\"header-btn\">\r\n                {userId === null && (\r\n                  <li>\r\n                    <Link to=\"/login\" className=\"main-btn btn-one\">\r\n                      Je veux jouer\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n                {userId !== null && (\r\n                  <li>\r\n                    <Link\r\n                      to=\"/\"\r\n                      className=\"main-btn btn-one\"\r\n                      onClick={startGame}\r\n                    >\r\n                      Je veux jouer\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-shape\">\r\n        <img src=\"assets/images/header-shape.svg\" alt=\"shape\"></img>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jumbotron;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/index.jsx",["185","186","187","188","189"],"import \"./style.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport GamePlayed from \"./GamePlayed\";\nimport PlayerInfos from \"./../PlayerInfos\";\n\nconst GamePlayedList = () => {\n  const userId = useSelector((state) => state.id);\n  const [gamesPlayed, setGamesPlayed] = useState([]);\n  const [gamesToPlay, setGamesToPlay] = useState([]);\n  const [playerStats, setPlayerStats] = useState({});\n  const [gamesPlayedStats, setGamesPlayedStats] = useState([]);\n\n  const fetchGamesPlayed = () => {\n    fetch(`https://pyramid-race-api.herokuapp.com/users/${userId}/games`)\n      .then((response) => response.json())\n      .then((data) => {\n        setGamesPlayedStats(data);\n        let slicedData = data.slice(0, 10);\n        setGamesPlayed(slicedData);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const fetchGamesToPlay = () => {\n    fetch(\n      `https://pyramid-race-api.herokuapp.com/users/${userId}/games_to_play`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setGamesPlayedStats(data);\n        let slicedData = data.slice(0, 10);\n        setGamesToPlay(slicedData);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    fetchGamesPlayed();\n    fetchGamesToPlay();\n  }, []);\n\n  useEffect(() => {\n    let player_stats = {\n      games_played: gamesPlayedStats.length,\n      games_won: gamesPlayedStats.filter((game) => game.winner_id === userId)\n        .length,\n      games_lost: gamesPlayedStats.filter(\n        (game) => game.winner_id != userId && game.winner_id !== null\n      ).length,\n    };\n    setPlayerStats(player_stats);\n  }, [gamesPlayed]);\n\n  return (\n    <div className=\"GameInfoContainer\">\n      <div className=\"game-info-column col-lg-8\">\n        <h1 className=\"text-center\">Parties en cours</h1>\n        <br />\n        <div className=\"list-container\">\n          {gamesToPlay.map((game) => {\n            if (game.winner_id === null && game.player1_id === userId) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player2_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (game.winner_id === null && game.player2_id === userId) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player1_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            }\n          })}\n        </div>\n\n        <h1 className=\"text-center\">Parties terminées</h1>\n        <br />\n        <div className=\"list-container\">\n          {gamesPlayed.map((game) => {\n            if (game.winner_id === userId && game.player1_id === userId) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player2_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (\n              game.winner_id === userId &&\n              game.player2_id === userId\n            ) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player1_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (\n              game.winner_id &&\n              game.winner_id !== userId &&\n              game.player2_id === userId\n            ) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player1_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (\n              game.winner_id &&\n              game.winner_id !== userId &&\n              game.player1_id === userId\n            ) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player2_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            }\n          })}\n        </div>\n      </div>\n      <div className=\"game-info-column col-lg-3 player-infos-col text-center\">\n        <PlayerInfos player_stats={playerStats} />\n      </div>\n    </div>\n  );\n};\n\nexport default GamePlayedList;\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/HomeSection/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Team/components/TeamCards/index.jsx",["190","191","192","193","194","195"],"import React, { useState, useEffect } from \"react\";\nimport \"./style.scss\";\n\nconst TeamCards = () => {\n  return (\n    <div className=\"team-boxed\">\n      <div className=\"container-team\">\n        <h2 className=\"text-center\">L'équipe</h2>\n      </div>\n      <div className=\"row people\">\n        <div className=\"box col-lg-2 item\">\n          <img\n            className=\"rounded-circle\"\n            src=\"https://sites.google.com/site/tzolkin16/_/rsrc/1463172104990/home/dia-de-los-suenos---28-de-agosto/sol_inca.png\"\n          />\n          <h3 className=\"name\">Anthony KRIEF</h3>\n          <p className=\"title\">Actuellement rang Paysan 😖</p>\n          <p className=\"description\">\n            C'est à lui que l'on doit l'aspect général du site. S'il ne vous\n            plait pas, balancez-le du haut de la pyramide pour lui remettre les\n            idées en place !\n          </p>\n        </div>\n\n        <div className=\"box col-lg-2 item\">\n          <img\n            className=\"rounded-circle\"\n            src=\"https://i.pinimg.com/originals/1b/c3/fb/1bc3fbb917115be38324c9d6631e0577.jpg\"\n          />\n          <h3 className=\"name\">Vivien Ploix</h3>\n          <p className=\"title\">Le déterminé 😁 </p>\n          <p className=\"description\">\n            Maître du 'fetch', il s'est arraché les cheveux pour que vous\n            puissiez avoir un jeu fonctionnel ! Il est temps de lui faire une\n            offrande... À vous !\n          </p>\n        </div>\n        <div className=\"box col-lg-2 item\">\n          <img\n            className=\"rounded-circle\"\n            src=\"https://pbs.twimg.com/media/Df0GpkuX4AAKDYi.jpg\"\n          />\n          <h3 className=\"name\">Olivier FITOUSSI</h3>\n          <p className=\"title\">Le fantôme de la pyramide 👻</p>\n          <p className=\"description\">\n            Peut-être que vous le croiserez dans les entrailles de la pyramide !\n            Ouvrez l'oeil !\n          </p>\n        </div>\n        <div className=\"box col-lg-2 item\">\n          <img\n            className=\"rounded-circle\"\n            src=\"https://i.pinimg.com/originals/90/1e/6c/901e6c0b315861b38cfaf18371a99f3f.jpg\"\n          />\n          <h3 className=\"name\">Cindy</h3>\n          <p className=\"title\">La dessinatrice ✍</p>\n          <p className=\"description\">\n            Un grand merci à elle, qui nous à fait les visuels de jeu (persos,\n            pyramide, écrans de victoire et de défaite). Oui, c'est à cause\n            d'elle que votre perso se fait bouffer 😄\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TeamCards;\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Team/components/Jumbotron/index.jsx",["196","197"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst TeamJumbotron = () => {\r\n  return (\r\n    <div\r\n      id=\"home\"\r\n      className=\"header-hero bg_cover\"\r\n      style={{ backgroundImage: `url(${\"assets/images/header-bg.jpg\"})` }}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xl-8 col-lg-10\">\r\n            <div className=\"header-content text-center\">\r\n              <h3 className=\"header-title\">\r\n                Bienvenue sur la page de l'équipe !\r\n              </h3>\r\n\r\n              <p className=\"text\">\r\n                Pendant deux semaines nous avons travaillé d'arrache pieds afin\r\n                de vous proposer ce jeu. Nous espérons qu'il vous plaira, et que\r\n                vous vous tiendrez au sommet de la pyramide !\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-shape\">\r\n        <img src=\"assets/images/header-shape.svg\" alt=\"shape\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamJumbotron;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/index.jsx",["198","199","200","201"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./style.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Cookie from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PlayerSuggestion from \"./PlayerSuggestion\";\r\n\r\nconst SearchBar = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const userId = useSelector((state) => state.id);\r\n  const tokenCookie = Cookie.get(\"token\");\r\n  const history = useHistory();\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [playerScore, setPlayerScore] = useState(0);\r\n\r\n  //Enables selecting the range of categories in the API and excluding the ones not containing enough questions\r\n  const arrayQuestions = [...Array(32 - 9 + 1)].map((item, index) => 9 + index);\r\n  const categoriesToBeRemoved = [13, 20, 25, 29, 30];\r\n  const categoriesArray = arrayQuestions.filter(\r\n    (item) => !categoriesToBeRemoved.includes(item)\r\n  );\r\n\r\n  const handleInputChange = (e) => {\r\n    const { value } = e.currentTarget;\r\n    setInput(value.replace(/\\s/, \"\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (input.length >= 3) {\r\n      fetch(`https://pyramid-race-api.herokuapp.com/users?pseudo=${input}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setSuggestions(data || []);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      setSuggestions([]);\r\n    }\r\n  }, [input]);\r\n\r\n  const closeSearch = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const startGame = (opponentId) => {\r\n    let difficulty;\r\n    if (playerScore < 200) {\r\n      difficulty = \"easy\";\r\n    } else if (playerScore >= 200 && playerScore < 400) {\r\n      difficulty = \"medium\";\r\n    } else if (playerScore >= 400) {\r\n      difficulty = \"hard\";\r\n    }\r\n    console.log(difficulty);\r\n    const data = {\r\n      game: {\r\n        player1_id: userId,\r\n        player2_id: opponentId,\r\n        difficulty: difficulty,\r\n        category:\r\n          categoriesArray[Math.floor(Math.random() * categoriesArray.length)],\r\n      },\r\n    };\r\n\r\n    fetch(`https://pyramid-race-api.herokuapp.com/games`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Authorization: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        history.push(`/games/${response.id}`);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const fetchPlayerScore = () => {\r\n    fetch(`https://pyramid-race-api.herokuapp.com/users/${userId}/games`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let games_won = data.filter((game) => game.winner_id === userId).length;\r\n        let games_lost = data.filter(\r\n          (game) => game.winner_id != userId && game.winner_id !== null\r\n        ).length;\r\n        let playerScore = games_won * 5 - games_lost * 3;\r\n        setPlayerScore(playerScore);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPlayerScore();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container searchbar navbar-form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Chercher un joueur\"\r\n        onChange={handleInputChange}\r\n        value={input}\r\n      />\r\n      <div className=\"search\" onClick={closeSearch}></div>\r\n      <div className=\"suggestions\">\r\n        {suggestions.map((suggestion) => {\r\n          if (suggestion.id != userId) {\r\n            return (\r\n              <PlayerSuggestion\r\n                pseudo={suggestion.pseudo}\r\n                onClick={() => {\r\n                  startGame(suggestion.id);\r\n                }}\r\n                key={suggestion.id}\r\n              />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/PlayerInfos/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/GamePlayed/index.jsx",["202","203"],"import \"./style.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Cookie from \"js-cookie\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst GamePlayed = ({ opponentId, winner_id, gameId }) => {\r\n  const tokenCookie = Cookie.get(\"token\");\r\n  const [opponent, setOpponent] = useState({});\r\n  const history = useHistory();\r\n  const userId = useSelector((state) => state.id);\r\n  const categoriesArray = [\r\n    9,\r\n    10,\r\n    11,\r\n    12,\r\n    14,\r\n    15,\r\n    17,\r\n    18,\r\n    21,\r\n    22,\r\n    23,\r\n    27,\r\n    28,\r\n    31,\r\n    32,\r\n  ];\r\n\r\n  const getOpponentInfos = () => {\r\n    fetch(`https://pyramid-race-api.herokuapp.com/users/${opponentId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setOpponent(data);\r\n      })\r\n      .catch((error) => alert(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOpponentInfos();\r\n  }, []);\r\n\r\n  const startGame = (opponent_id) => {\r\n    const data = {\r\n      game: {\r\n        player1_id: userId,\r\n        player2_id: opponent_id,\r\n        difficulty: \"medium\",\r\n        category:\r\n          categoriesArray[Math.floor(Math.random() * categoriesArray.length)],\r\n      },\r\n    };\r\n\r\n    fetch(`https://pyramid-race-api.herokuapp.com/games`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Authorization: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        history.push(`/games/${response.id}`);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container card-game\">\r\n      <div className=\"row align-middle\">\r\n        <div className=\"col-md-8 col-lg-6 column\">\r\n          <div className=\"card gr-1\">\r\n            <div className=\"txt\">\r\n              {winner_id != opponentId && winner_id != null && (\r\n                <div>\r\n                  <h1>\r\n                    <b>Victoire</b>\r\n                  </h1>\r\n                  <p>\r\n                    Tu es le grand gagnant de cette partie ! (calme-toi quand\r\n                    même)\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {winner_id === opponentId && (\r\n                <div>\r\n                  <h1>Défaite</h1>\r\n                  <p>\r\n                    Tu as perdu, à présent nous te regarderons avec le mépris\r\n                    que tu mérites !\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {winner_id === null && (\r\n                <div>\r\n                  <h1>\r\n                    <b>En cours</b>\r\n                  </h1>\r\n                  <p>La partie n'est pas encore terminée ! Quel suspense !</p>\r\n                </div>\r\n              )}\r\n\r\n              <small>Adversaire : {opponent.pseudo}</small>\r\n            </div>\r\n            {winner_id === null && (\r\n              <Link to={{ pathname: `/games/${gameId}` }}>Jouer</Link>\r\n            )}\r\n            {winner_id !== null && (\r\n              <Link to=\"/\" onClick={() => startGame(opponentId)}>\r\n                Rejouer\r\n              </Link>\r\n            )}\r\n\r\n            <div className=\"ico-card\">\r\n              <i className=\"lni lni-pyramids\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePlayed;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/PlayerInfos/ProgressBar/index.jsx",["204"],"import React, { useState, useEffect } from \"react\";\nimport \"./style.scss\";\nimport { useSelector } from \"react-redux\";\n//@ts-ignore\n\nconst ProgressBar = ({ playerScore }) => {\n  const [width, setWidth] = useState(0);\n  const [level, setLevel] = useState(\"\");\n  useEffect(() => {\n    if (playerScore < 0) {\n      setLevel(\"Cafard de la pyramide\");\n      setWidth(playerScore + 100);\n    } else if (playerScore >= 0 && playerScore < 100) {\n      setLevel(\"Paysan\");\n      setWidth(playerScore);\n    } else if (playerScore >= 100 && playerScore < 200) {\n      setLevel(\"Guerrier\");\n      setWidth(playerScore - 100);\n    } else if (playerScore >= 200 && playerScore < 300) {\n      setLevel(\"Grand pretre\");\n      setWidth(playerScore - 200);\n    } else if (playerScore >= 300 && playerScore < 400) {\n      setLevel(\"Noble\");\n      setWidth(playerScore - 300);\n    } else if (playerScore >= 400) {\n      setLevel(\"Roi\");\n      setWidth(playerScore - 400);\n    }\n  }, [playerScore]);\n\n  return (\n    <div className=\"container-progress\">\n      <div className=\"progress\">\n        <div\n          className=\"progress-bar progress-bar-danger progress-bar-striped active\"\n          style={{ width: `${width}%` }}\n        ></div>\n      </div>\n      <h5 className=\"mb-3\">Rang : {level}</h5>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/PlayerSuggestion/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Components/AudioPlayer/index.jsx",["205","206"],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":3,"column":27,"nodeType":"213","messageId":"214","endLine":3,"endColumn":33},{"ruleId":"211","severity":1,"message":"215","line":3,"column":35,"nodeType":"213","messageId":"214","endLine":3,"endColumn":40},{"ruleId":"211","severity":1,"message":"216","line":3,"column":42,"nodeType":"213","messageId":"214","endLine":3,"endColumn":48},{"ruleId":"211","severity":1,"message":"212","line":2,"column":27,"nodeType":"213","messageId":"214","endLine":2,"endColumn":33},{"ruleId":"211","severity":1,"message":"215","line":2,"column":35,"nodeType":"213","messageId":"214","endLine":2,"endColumn":40},{"ruleId":"211","severity":1,"message":"216","line":2,"column":42,"nodeType":"213","messageId":"214","endLine":2,"endColumn":48},{"ruleId":"217","severity":1,"message":"218","line":99,"column":23,"nodeType":"219","endLine":99,"endColumn":38},{"ruleId":"217","severity":1,"message":"218","line":106,"column":63,"nodeType":"219","endLine":106,"endColumn":78},{"ruleId":"217","severity":1,"message":"218","line":114,"column":23,"nodeType":"219","endLine":114,"endColumn":38},{"ruleId":"217","severity":1,"message":"218","line":123,"column":23,"nodeType":"219","endLine":123,"endColumn":38},{"ruleId":"211","severity":1,"message":"220","line":14,"column":8,"nodeType":"213","messageId":"214","endLine":14,"endColumn":24},{"ruleId":"221","severity":1,"message":"222","line":65,"column":6,"nodeType":"223","endLine":65,"endColumn":17,"suggestions":"224"},{"ruleId":"221","severity":1,"message":"225","line":69,"column":6,"nodeType":"223","endLine":69,"endColumn":8,"suggestions":"226"},{"ruleId":"221","severity":1,"message":"227","line":83,"column":6,"nodeType":"223","endLine":83,"endColumn":12,"suggestions":"228"},{"ruleId":"229","severity":1,"message":"230","line":162,"column":27,"nodeType":"231","messageId":"232","endLine":162,"endColumn":29},{"ruleId":"221","severity":1,"message":"233","line":263,"column":6,"nodeType":"223","endLine":263,"endColumn":19,"suggestions":"234"},{"ruleId":"221","severity":1,"message":"235","line":380,"column":6,"nodeType":"223","endLine":380,"endColumn":19,"suggestions":"236"},{"ruleId":"221","severity":1,"message":"237","line":387,"column":6,"nodeType":"223","endLine":387,"endColumn":24,"suggestions":"238"},{"ruleId":"211","severity":1,"message":"239","line":389,"column":9,"nodeType":"213","messageId":"214","endLine":389,"endColumn":19},{"ruleId":"221","severity":1,"message":"235","line":400,"column":6,"nodeType":"223","endLine":400,"endColumn":8,"suggestions":"240"},{"ruleId":"241","severity":1,"message":"242","line":444,"column":9,"nodeType":"243","endLine":444,"endColumn":67},{"ruleId":"241","severity":1,"message":"242","line":450,"column":11,"nodeType":"243","endLine":450,"endColumn":49},{"ruleId":"241","severity":1,"message":"242","line":457,"column":11,"nodeType":"243","endLine":457,"endColumn":49},{"ruleId":"241","severity":1,"message":"242","line":6,"column":10,"nodeType":"243","endLine":6,"endColumn":63},{"ruleId":"211","severity":1,"message":"212","line":4,"column":27,"nodeType":"213","messageId":"214","endLine":4,"endColumn":33},{"ruleId":"211","severity":1,"message":"215","line":4,"column":35,"nodeType":"213","messageId":"214","endLine":4,"endColumn":40},{"ruleId":"211","severity":1,"message":"216","line":4,"column":42,"nodeType":"213","messageId":"214","endLine":4,"endColumn":48},{"ruleId":"241","severity":1,"message":"242","line":15,"column":7,"nodeType":"243","endLine":15,"endColumn":54},{"ruleId":"211","severity":1,"message":"244","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"245","line":1,"column":8,"nodeType":"213","messageId":"214","endLine":1,"endColumn":13},{"ruleId":"207","replacedBy":"246"},{"ruleId":"209","replacedBy":"247"},{"ruleId":"221","severity":1,"message":"248","line":18,"column":6,"nodeType":"223","endLine":18,"endColumn":17,"suggestions":"249"},{"ruleId":"221","severity":1,"message":"250","line":34,"column":6,"nodeType":"223","endLine":34,"endColumn":22,"suggestions":"251"},{"ruleId":"221","severity":1,"message":"252","line":48,"column":6,"nodeType":"223","endLine":48,"endColumn":8,"suggestions":"253"},{"ruleId":"229","severity":1,"message":"230","line":95,"column":36,"nodeType":"231","messageId":"232","endLine":95,"endColumn":38},{"ruleId":"221","severity":1,"message":"254","line":41,"column":6,"nodeType":"223","endLine":41,"endColumn":8,"suggestions":"255"},{"ruleId":"229","severity":1,"message":"230","line":49,"column":34,"nodeType":"231","messageId":"232","endLine":49,"endColumn":36},{"ruleId":"221","severity":1,"message":"256","line":53,"column":6,"nodeType":"223","endLine":53,"endColumn":19,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":61,"column":35,"nodeType":"260","messageId":"261","endLine":61,"endColumn":37},{"ruleId":"258","severity":1,"message":"259","line":87,"column":35,"nodeType":"260","messageId":"261","endLine":87,"endColumn":37},{"ruleId":"211","severity":1,"message":"244","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"262","line":1,"column":27,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},{"ruleId":"241","severity":1,"message":"242","line":12,"column":11,"nodeType":"243","endLine":15,"endColumn":13},{"ruleId":"241","severity":1,"message":"242","line":26,"column":11,"nodeType":"243","endLine":29,"endColumn":13},{"ruleId":"241","severity":1,"message":"242","line":39,"column":11,"nodeType":"243","endLine":42,"endColumn":13},{"ruleId":"241","severity":1,"message":"242","line":51,"column":11,"nodeType":"243","endLine":54,"endColumn":13},{"ruleId":"211","severity":1,"message":"244","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"262","line":1,"column":27,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},{"ruleId":"229","severity":1,"message":"230","line":86,"column":36,"nodeType":"231","messageId":"232","endLine":86,"endColumn":38},{"ruleId":"221","severity":1,"message":"263","line":96,"column":6,"nodeType":"223","endLine":96,"endColumn":8,"suggestions":"264"},{"ruleId":"258","severity":1,"message":"259","line":108,"column":39,"nodeType":"260","messageId":"261","endLine":108,"endColumn":41},{"ruleId":"229","severity":1,"message":"230","line":109,"column":29,"nodeType":"231","messageId":"232","endLine":109,"endColumn":31},{"ruleId":"221","severity":1,"message":"265","line":41,"column":6,"nodeType":"223","endLine":41,"endColumn":8,"suggestions":"266"},{"ruleId":"229","severity":1,"message":"230","line":75,"column":26,"nodeType":"231","messageId":"232","endLine":75,"endColumn":28},{"ruleId":"211","severity":1,"message":"267","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":21},{"ruleId":"211","severity":1,"message":"268","line":6,"column":28,"nodeType":"213","messageId":"214","endLine":6,"endColumn":33},{"ruleId":"211","severity":1,"message":"269","line":6,"column":35,"nodeType":"213","messageId":"214","endLine":6,"endColumn":42},"no-native-reassign",["270"],"no-negated-in-lhs",["271"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'ReactAudioPlayer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentQuestionIndex'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentQuestion' needs the current value of 'currentQuestionIndex'.","ArrayExpression",["272"],"React Hook useEffect has a missing dependency: 'fetchGame'. Either include it or remove the dependency array.",["273"],"React Hook useEffect has missing dependencies: 'destroyGame', 'fetchHistoryPlayer1', 'fetchQuestions', 'forfeitGame', and 'userId'. Either include them or remove the dependency array.",["274"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'count3' and 'gameEnd'. Either include them or remove the dependency array. You can also do a functional update 'setCount3(c => ...)' if you only need 'count3' in the 'setCount3' call.",["275"],"React Hook useEffect has a missing dependency: 'movePlayer1'. Either include it or remove the dependency array.",["276"],"React Hook useEffect has missing dependencies: 'count2', 'game.turn', and 'movePlayer2'. Either include them or remove the dependency array. You can also do a functional update 'setCount2(c => ...)' if you only need 'count2' in the 'setCount2' call.",["277"],"'promptUser' is assigned a value but never used.",["278"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'React' is defined but never used.",["270"],["271"],"React Hook useEffect has missing dependencies: 'reset' and 'start'. Either include them or remove the dependency array.",["279"],"React Hook useEffect has a missing dependency: 'questionArray'. Either include it or remove the dependency array.",["280"],"React Hook useEffect has missing dependencies: 'fetchPlayerScore', 'fetchPossibleOpponents', and 'userId'. Either include them or remove the dependency array.",["281"],"React Hook useEffect has missing dependencies: 'fetchGamesPlayed' and 'fetchGamesToPlay'. Either include them or remove the dependency array.",["282"],"React Hook useEffect has missing dependencies: 'gamesPlayedStats' and 'userId'. Either include them or remove the dependency array.",["283"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchPlayerScore'. Either include it or remove the dependency array.",["284"],"React Hook useEffect has a missing dependency: 'getOpponentInfos'. Either include it or remove the dependency array.",["285"],"'useSelector' is defined but never used.","'ready' is assigned a value but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},"Update the dependencies array to be: [currentQuestionIndex, questions]",{"range":"314","text":"315"},"Update the dependencies array to be: [fetchGame]",{"range":"316","text":"317"},"Update the dependencies array to be: [destroyGame, fetchHistoryPlayer1, fetchQuestions, forfeitGame, game, userId]",{"range":"318","text":"319"},"Update the dependencies array to be: [count3, gameEnd, timePlayer1]",{"range":"320","text":"321"},"Update the dependencies array to be: [currentStep, movePlayer1]",{"range":"322","text":"323"},"Update the dependencies array to be: [count2, firstGameHistory, game.turn, movePlayer2]",{"range":"324","text":"325"},"Update the dependencies array to be: [movePlayer1]",{"range":"326","text":"327"},"Update the dependencies array to be: [reset, resetTick, start]",{"range":"328","text":"329"},"Update the dependencies array to be: [correct_answer, questionArray]",{"range":"330","text":"331"},"Update the dependencies array to be: [fetchPlayerScore, fetchPossibleOpponents, userId]",{"range":"332","text":"333"},"Update the dependencies array to be: [fetchGamesPlayed, fetchGamesToPlay]",{"range":"334","text":"335"},"Update the dependencies array to be: [gamesPlayed, gamesPlayedStats, userId]",{"range":"336","text":"337"},"Update the dependencies array to be: [fetchPlayerScore]",{"range":"338","text":"339"},"Update the dependencies array to be: [getOpponentInfos]",{"range":"340","text":"341"},[2531,2542],"[currentQuestionIndex, questions]",[2588,2590],"[fetchGame]",[2934,2940],"[destroyGame, fetchHistoryPlayer1, fetchQuestions, forfeitGame, game, userId]",[8120,8133],"[count3, gameEnd, timePlayer1]",[11354,11367],"[currentStep, movePlayer1]",[11501,11519],"[count2, firstGameHistory, game.turn, movePlayer2]",[11909,11911],"[movePlayer1]",[409,420],"[reset, resetTick, start]",[767,783],"[correct_answer, questionArray]",[1098,1100],"[fetchPlayerScore, fetchPossibleOpponents, userId]",[1306,1308],"[fetchGamesPlayed, fetchGamesToPlay]",[1672,1685],"[gamesPlayed, gamesPlayedStats, userId]",[3074,3076],"[fetchPlayerScore]",[935,937],"[getOpponentInfos]"]