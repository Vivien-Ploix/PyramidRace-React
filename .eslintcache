[{"/home/vivien/next/projet_final/PyramidRace-React/src/index.jsx":"1","/home/vivien/next/projet_final/PyramidRace-React/src/redux/store.js":"2","/home/vivien/next/projet_final/PyramidRace-React/src/Components/Footer/index.jsx":"3","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authReducer.js":"4","/home/vivien/next/projet_final/PyramidRace-React/src/Components/NavBar/index.jsx":"5","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Login/index.jsx":"6","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Signup/index.jsx":"7","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/index.jsx":"8","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/index.jsx":"9","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/index.jsx":"10","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authTypes.js":"11","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authActions.js":"12","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Modal/index.jsx":"13","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Countdown/index.jsx":"14","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/Jumbotron/index.jsx":"15","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/HomeSection/index.jsx":"16","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/QuestionCard/index.jsx":"17","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/index.jsx":"18","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/JumbotronGameInfos/index.jsx":"19","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/PlayerInfos/index.jsx":"20","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/GamePlayed/index.jsx":"21","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/index.jsx":"22","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/PlayerSuggestion/index.jsx":"23","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Victory/index.jsx":"24","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Defeat/index.jsx":"25"},{"size":1712,"mtime":1608046502449,"results":"26","hashOfConfig":"27"},{"size":557,"mtime":1607529790098,"results":"28","hashOfConfig":"27"},{"size":631,"mtime":1607694872866,"results":"29","hashOfConfig":"27"},{"size":710,"mtime":1607529226101,"results":"30","hashOfConfig":"27"},{"size":4508,"mtime":1607694872883,"results":"31","hashOfConfig":"27"},{"size":3842,"mtime":1607676999087,"results":"32","hashOfConfig":"27"},{"size":4376,"mtime":1607676999093,"results":"33","hashOfConfig":"27"},{"size":245,"mtime":1608041940206,"results":"34","hashOfConfig":"27"},{"size":9620,"mtime":1608049590599,"results":"35","hashOfConfig":"27"},{"size":315,"mtime":1607959795676,"results":"36","hashOfConfig":"27"},{"size":205,"mtime":1607522325087,"results":"37","hashOfConfig":"27"},{"size":375,"mtime":1607529226095,"results":"38","hashOfConfig":"27"},{"size":2381,"mtime":1608037787097,"results":"39","hashOfConfig":"27"},{"size":493,"mtime":1608047571967,"results":"40","hashOfConfig":"27"},{"size":3629,"mtime":1608047532047,"results":"41","hashOfConfig":"27"},{"size":3850,"mtime":1608043791230,"results":"42","hashOfConfig":"27"},{"size":1555,"mtime":1608040109217,"results":"43","hashOfConfig":"27"},{"size":4513,"mtime":1608037787044,"results":"44","hashOfConfig":"27"},{"size":1426,"mtime":1607959795568,"results":"45","hashOfConfig":"27"},{"size":795,"mtime":1608037787060,"results":"46","hashOfConfig":"27"},{"size":3318,"mtime":1608037787031,"results":"47","hashOfConfig":"27"},{"size":2807,"mtime":1608039785597,"results":"48","hashOfConfig":"27"},{"size":276,"mtime":1608039794249,"results":"49","hashOfConfig":"27"},{"size":133,"mtime":1608046021651,"results":"50","hashOfConfig":"27"},{"size":122,"mtime":1608045543123,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1ukoblb",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/vivien/next/projet_final/PyramidRace-React/src/index.jsx",[],["113","114"],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/store.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Components/Footer/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authReducer.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Components/NavBar/index.jsx",["115","116","117","118","119","120"],"import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logoutSuccess } from \"../../redux/authentication/authActions\";\r\n\r\nconst NavBar = () => {\r\n  const tokenCookie = Cookies.get(\"token\");\r\n  const isLoggedIn = useSelector((state) => state.isLoggedIn);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickLogout = () => {\r\n    fetch(\"https://pyramid-race-api.herokuapp.com/logout\", {\r\n      method: \"delete\",\r\n      Bearer: {\r\n        token: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(Cookies.get(\"token\"));\r\n        Cookies.remove(\"token\");\r\n        dispatch(logoutSuccess());\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"isLoggedIn changed\");\r\n  }, [isLoggedIn]);\r\n\r\n  return (\r\n    <div className=\"navgition navgition-transparent\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <nav className=\"navbar navbar-expand-lg\">\r\n              <Link to=\"/\">\r\n                <img src=\"/assets/images/logo.svg\" alt=\"Logo\"></img>\r\n              </Link>\r\n              <button\r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbarOne\"\r\n                aria-controls=\"navbarOne\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n              >\r\n                <span className=\"toggler-icon\"></span>\r\n                <span className=\"toggler-icon\"></span>\r\n                <span className=\"toggler-icon\"></span>\r\n              </button>\r\n              <div\r\n                className=\"collapse navbar-collapse sub-menu-bar\"\r\n                id=\"navbarOne\"\r\n              >\r\n                <ul className=\"navbar-nav m-auto\">\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/\">Accueil</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"page-scroll\" href=\"/#information\">\r\n                      Informations\r\n                    </a>\r\n                  </li>\r\n                  {tokenCookie && (\r\n                    <>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/gameinfos\">Profil</Link>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/\" onClick={handleClickLogout}>\r\n                          Se déconnecter\r\n                        </Link>\r\n                      </li>\r\n                    </>\r\n                  )}\r\n                  {!tokenCookie && (\r\n                    <>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/sign-up\">S'inscrire</Link>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/login\">Se connecter</Link>\r\n                      </li>\r\n                    </>\r\n                  )}\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"navbar-social d-none d-sm-flex align-items-center\">\r\n                <span>NOS RESEAUX</span>\r\n                <ul>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://www.facebook.com/PyramidRace\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"lni-facebook-filled\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"https://twitter.com/RacePyramid\" target=\"_blank\">\r\n                      {\" \"}\r\n                      <i className=\"lni-twitter-original\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://www.instagram.com/pyramid.race/\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"lni-instagram-original\"></i>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Login/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Signup/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/index.jsx",["121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140"],"import \"./style.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport Cookie from \"js-cookie\";\nimport QuestionCard from \"./QuestionCard\";\nimport Pyramid from \"./assets/pyramid.png\";\nimport Perso1 from \"./assets/perso1.png\";\nimport Perso2 from \"./assets/perso2.png\";\nimport Countdown from \"./Countdown/index\";\nimport ModalDiv from \"./Modal/index\";\nimport { Prompt } from \"react-router-dom\";\n\nconst Game = () => {\n  let { id } = useParams();\n  const userId = useSelector((state) => state.id);\n  const tokenCookie = Cookie.get(\"token\");\n  const [game, setGame] = useState({});\n  const [questions, setQuestions] = useState([]);\n  const [count, setCount] = useState(0);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [gameOn, setGameOn] = useState(false);\n  const [newQuestionTime, setNewQuestionTime] = useState(new Date(Date.now()));\n  const [currentStep, setCurrentStep] = useState(0);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [gameHistories, setGameHistories] = useState([]);\n  const history = useHistory();\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n    history.push(\"/gameinfos\");\n  };\n\n  useEffect(() => {\n    console.log(gameHistories);\n  }, [gameHistories]);\n\n  useEffect(() => {\n    console.log(questions);\n    if (questions.length === 12) {\n      setCurrentQuestion(questions[currentQuestionIndex]);\n      setGameOn(true);\n      console.log(currentQuestion);\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  }, [questions]);\n\n  useEffect(() => {\n    console.log(currentQuestion);\n  }, [currentQuestion]);\n\n  useEffect(() => {\n    fetchGame();\n  }, []);\n\n  useEffect(() => {\n    console.log(newQuestionTime);\n  }, [newQuestionTime]);\n\n  useEffect(() => {\n    setCount(count + 1);\n    if (count === 1) {\n      console.log(\"test ongoing\");\n      console.log(game);\n      if (userId == game.player2_id) {\n        console.log(\"test succeeded\");\n        fetchHistoryPlayer1();\n      }\n      console.log(game);\n      fetchQuestions();\n    }\n  }, [game]);\n\n  const fetchGame = () => {\n    fetch(`https://pyramid-race-api.herokuapp.com/games/${id}`)\n      .then((response) => response.json())\n      .then((data) => setGame(data))\n      .catch((error) => console.log(error));\n  };\n\n  const fetchQuestions = () => {\n    fetch(\n      `https://opentdb.com/api.php?amount=12&category=${game.category}&difficulty=${game.difficulty}&type=multiple`\n    )\n      .then((response) => response.json())\n      .then((data) => setQuestions(data.results));\n  };\n\n  const fetchHistoryPlayer1 = () => {\n    fetch(`https://pyramid-race-api.herokuapp.com/games/${id}/game_histories`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setGameHistories(data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const gameEnd = () => {\n    let player1_correct_answers = gameHistories.filter(\n      (game_history) => game_history.correct_answer === true\n    ).length;\n    console.log(\"game histories : correct answers\");\n    console.log(player1_correct_answers);\n    let player1_wrong_answers = gameHistories.filter(\n      (game_history) => game_history.correct_answer !== true\n    ).length;\n    console.log(\"game histories : wronf answers\");\n    console.log(player1_wrong_answers);\n    let player1_step = player1_correct_answers - player1_wrong_answers;\n    console.log(\"player 1 step : \", player1_step);\n    let winner_id;\n    console.log(\"winner_id :\", winner_id);\n    if (player1_step >= currentStep) {\n      winner_id = game.player1_id;\n    } else {\n      winner_id = game.player2_id;\n    }\n    const data = {\n      game: {\n        winner_id: winner_id,\n        turn: \"gameEnded\",\n      },\n    };\n    fetch(`https://pyramid-race-api.herokuapp.com/games/${id}`, {\n      method: \"put\",\n      headers: {\n        Authorization: `${tokenCookie}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then((response) => {\n      if (userId == winner_id) {\n        history.push(`/games/${id}/victory`);\n      } else if (userId != winner_id) {\n        history.push(`/game/${id}/defeat`);\n      }\n    });\n  };\n\n  const nextTurn = () => {\n    const data = {\n      game: {\n        turn: \"player2\",\n      },\n    };\n    fetch(`https://pyramid-race-api.herokuapp.com/games/${id}`, {\n      method: \"put\",\n      headers: {\n        Authorization: `${tokenCookie}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  };\n\n  useEffect(() => {\n    console.log(currentStep);\n  }, [currentStep]);\n\n  const nextQuestion = (answer_choice, correct_answer) => {\n    const data = {\n      game_history: {\n        user_id: userId,\n        game_id: id,\n        response_correct:\n          !!answer_choice &&\n          !!correct_answer &&\n          answer_choice === correct_answer,\n        question_time: newQuestionTime,\n        response_time: new Date(Date.now()),\n      },\n    };\n    fetch(`https://pyramid-race-api.herokuapp.com/game_histories`, {\n      method: \"post\",\n      headers: {\n        Authorization: `${tokenCookie}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then((response) => response.json());\n\n    if (answer_choice && answer_choice === correct_answer && currentStep < 5) {\n      setCurrentStep(currentStep + 1);\n    } else if (\n      answer_choice &&\n      answer_choice === correct_answer &&\n      currentStep === 5\n    ) {\n      setCurrentStep(currentStep + 1);\n      setGameOn(false);\n      setCurrentQuestion({});\n      setCurrentQuestionIndex(\"\");\n    } else if (\n      (!answer_choice && currentStep > 0) ||\n      (answer_choice !== correct_answer && currentStep > 0)\n    ) {\n      setCurrentStep(currentStep - 1);\n    }\n\n    if (currentQuestionIndex < 12) {\n      setCurrentQuestion(questions[currentQuestionIndex]);\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setNewQuestionTime(new Date(Date.now()));\n    } else {\n      setGameOn(false);\n      setCurrentQuestion({});\n      setCurrentQuestionIndex(\"\");\n      if (userId == game.player1_id) {\n        nextTurn();\n        openModal();\n      } else if (userId == game.player2_id) {\n        console.log(\"partie terminee\");\n        gameEnd();\n      }\n    }\n  };\n\n  // Prompt before leaving page\n\n  // useEffect(() => {\n  //   window.addEventListener('beforeunload', alertUser)\n  //   if(userId == game.player1_id){\n  //     console.log(\"testtesttets\")\n  //       window.addEventListener('unload', destroyGame)\n  //     } else if (userId == game.payer2_id){\n  //       window.addEventListener('unload', forfeitGame)\n  //   }\n\n  //   if(userId == game.player1_id){\n  //     console.log(\"teeeeeeeeest\")\n  //     return () => {\n  //       window.removeEventListener('beforeunload', alertUser)\n  //       window.removeEventListener('unload', destroyGame)\n  //       destroyGame()\n  //     }\n  //   } else if (userId == game.player2_id) {\n  //     return () => {\n  //       window.removeEventListener('beforeunload', alertUser)\n  //       window.removeEventListener('unload', forfeitGame)\n  //       forfeitGame()\n  //     }\n  //   }\n  // }, [])\n\n  const alertUser = (e) => {\n    e.preventDefault();\n    e.returnValue = \"\";\n  };\n  const destroyGame = () => {\n    fetch(`https://pyramid-race-api.herokuapp.com/games/${id}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: `${tokenCookie}`,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n\n  const forfeitGame = () => {\n    const data = {\n      game: {\n        winner_id: game.player1_id,\n        turn: \"gameEnded\",\n      },\n    };\n    fetch(`https://pyramid-race-api.herokuapp.com/games/${id}`, {\n      method: \"put\",\n      headers: {\n        Authorization: `${tokenCookie}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  };\n\n  const move = (e) => {\n    console.log(e.currentTarget);\n\n    var element = e.currentTarget;\n  };\n\n  return (\n    <div className=\"game_page\">\n      {userId == game.player1_id && (\n        <Prompt\n          message={() => \"Si vous quittez cette page la partie sera perdue !\"}\n        />\n      )}\n      {userId == game.player2_id && (\n        <Prompt\n          message={() =>\n            \"Si vous quittez cette page, vous serez automatiquement déclaré forfait !\"\n          }\n        />\n      )}\n\n      <ModalDiv\n        modalIsOpen={modalIsOpen}\n        closeModal={closeModal}\n        step={currentStep}\n      />\n      {((gameOn && userId == game.player2_id && game.turn == \"player2\") ||\n        (gameOn && userId == game.player1_id && game.turn === \"player1\")) && (\n        <>\n          <Countdown onExpire={nextQuestion} resetTick={currentQuestionIndex} />\n          <QuestionCard\n            question={currentQuestion.question}\n            correct_answer={currentQuestion.correct_answer}\n            incorrect_answers={currentQuestion.incorrect_answers}\n            nextQuestion={nextQuestion}\n          />\n          <div id=\"test\"></div>\n        </>\n      )}\n      <div className=\"game_content\">\n        <img className=\"pyramid\" src={Pyramid} />\n      </div>\n      <div className=\"perso1\" onClick={move}>\n        <img className=\"perso\" src={Perso1} />\n      </div>\n      <div className=\"perso2\" onClick={move}>\n        <img className=\"perso\" src={Perso2} />\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authTypes.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authActions.js",["141","142"],"import { AUTHENTICATION_SUCCESS, AUTHENTICATION_FAILED, LOAD_ACCOUNT, LOGOUT_SUCCESS } from './authTypes';\n\nexport const authSuccess = (response) => {\n    return {\n        type: AUTHENTICATION_SUCCESS,\n        id: response.data.id,\n        attributes: response.data.attributes,\n    };\n};\n\nexport const logoutSuccess = () => {\n    return {\n        type: LOGOUT_SUCCESS\n    }\n}","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Modal/index.jsx",["143","144","145"],"import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement(\"#root\");\r\n\r\nconst ModalDiv = ({ modalIsOpen, closeModal, step }) => {\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n      \r\n        {step < 2 && (\r\n          <div>\r\n            <h2 >\r\n              Ok, tu as atteins l'étage {step} de la pyramide !\r\n            </h2>\r\n            <div>\r\n              C'est vraiment ridicule, ton adversaire n'aura pas de mal a té\r\n              vaincre... va te cacher\r\n            </div>\r\n            <button onClick={closeModal}>Revenir à mon profil</button>\r\n          </div>\r\n        )}\r\n        {step > 2 && step <= 4 && (\r\n          <div>\r\n            <h2>\r\n              Pas mal,tu as atteins l'étage {step} de la pyramide !\r\n            </h2>\r\n            <div>\r\n              Résultat honorable, voyons si ton adversaire peut faire mieux !\r\n            </div>\r\n            <button onClick={closeModal}>Revenir à mon profil</button>\r\n          </div>\r\n        )}\r\n        {step == 5 && (\r\n          <div>\r\n            <h2 >\r\n              Tu as atteins l'étage {step} de la pyramide !\r\n            </h2>\r\n            <div>\r\n              A une marche du sommet de la pyramide ! Belle performance, ton\r\n              adversaire va devoir se surpasser !\r\n            </div>\r\n            <button onClick={closeModal}>Revenir à mon profil</button>\r\n          </div>\r\n        )}\r\n        {step == 6 && (\r\n            <div>\r\n              <h2>\r\n                Tu as atteins le sommet de la pyramide !!!\r\n              </h2>\r\n              <div>\r\n                Bravo ! Le Dieu serpent est fier de toi ! Si ton adversaire ne\r\n                fait pas preuve d'autant de force, tu gagneras cette bataille !\r\n              </div>\r\n              <button onClick={closeModal}>Revenir à mon profil</button>\r\n            </div>\r\n          )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalDiv;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Countdown/index.jsx",["146"],"import React, { useEffect } from \"react\";\r\n\r\nimport { useCountdownTimer } from \"use-countdown-timer\";\r\n\r\nconst Countdown = ({ onExpire, resetTick }) => {\r\n  const { countdown, reset, start } = useCountdownTimer({\r\n    timer: 1000 * 20000,\r\n    autostart: true,\r\n    onExpire,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (resetTick === 0) {\r\n      return;\r\n    }\r\n    reset();\r\n    start();\r\n  }, [resetTick]);\r\n\r\n  return <div>Countdown : {countdown / 1000}</div>;\r\n};\r\n\r\nexport default Countdown;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/Jumbotron/index.jsx",["147"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Cookie from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Jumbotron = () => {\r\n  const userId = useSelector((state) => state.id);\r\n  const tokenCookie = Cookie.get(\"token\");\r\n  const history = useHistory();\r\n  const [possibleOpponents, setPossibleOpponents] = useState([]);\r\n  const categoriesArray = [\r\n    9,\r\n    10,\r\n    11,\r\n    12,\r\n    14,\r\n    15,\r\n    16,\r\n    17,\r\n    18,\r\n    19,\r\n    21,\r\n    22,\r\n    23,\r\n    24,\r\n    26,\r\n    27,\r\n    28,\r\n    31,\r\n    32,\r\n  ];\r\n\r\n  const fetchPossibleOpponents = () => {\r\n    fetch(\r\n      `https://pyramid-race-api.herokuapp.com/users/${userId}/possible_opponents`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setPossibleOpponents(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPossibleOpponents();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(possibleOpponents);\r\n  }, [possibleOpponents]);\r\n\r\n  const startGame = () => {\r\n    const data = {\r\n      game: {\r\n        player1_id: userId,\r\n        player2_id:\r\n          possibleOpponents[\r\n            Math.floor(Math.random() * possibleOpponents.length)\r\n          ].id,\r\n        difficulty: \"medium\",\r\n        category:\r\n          categoriesArray[Math.floor(Math.random() * categoriesArray.length)],\r\n      },\r\n    };\r\n\r\n    fetch(`https://pyramid-race-api.herokuapp.com/games`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Authorization: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        history.push(`/game/${response.id}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"home\"\r\n      className=\"header-hero bg_cover\"\r\n      style={{ backgroundImage: `url(${\"assets/images/header-bg.jpg\"})` }}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xl-8 col-lg-10\">\r\n            <div className=\"header-content text-center\">\r\n              <h3 className=\"header-title\">\r\n                Bienvenue sur Pyramid <em>Race</em> !\r\n              </h3>\r\n              <h2>Confronte ta culture générale avec d'autres joueurs !</h2>\r\n              <p className=\"text\">\r\n                Prouve que tu es le meilleur en atteignant le haut de la\r\n                pyramide ou tu erreras dans ses labyrinthes jusqu'à ce que tu te\r\n                transformes en burrito avarié !\r\n              </p>\r\n              <ul className=\"header-btn\">\r\n                {userId === null && (\r\n                  <li>\r\n                    <Link to=\"/sign-up\" className=\"main-btn btn-one\">\r\n                      Je veux jouer\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n                {userId !== null && (\r\n                  <li>\r\n                    <Link\r\n                      to=\"/\"\r\n                      className=\"main-btn btn-one\"\r\n                      onClick={startGame}\r\n                    >\r\n                      Je veux jouer\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-shape\">\r\n        <img src=\"assets/images/header-shape.svg\" alt=\"shape\"></img>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jumbotron;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/HomeSection/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/QuestionCard/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/index.jsx",["148","149","150","151","152","153","154","155","156","157","158","159"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport GamePlayed from \"./GamePlayed\";\nimport PlayerInfos from \"./../PlayerInfos\";\nimport \"./style.scss\";\n\nconst GamePlayedList = () => {\n  const userId = useSelector((state) => state.id);\n  const [gamesPlayed, setGamesPlayed] = useState([]);\n  const [gamesToPlay, setGamesToPlay] = useState([]);\n  const [playerStats, setPlayerStats] = useState({});\n  const [gamesPlayedStats, setGamesPlayedStats] = useState([]);\n\n  const fetchGamesPlayed = () => {\n    fetch(`https://pyramid-race-api.herokuapp.com/users/${userId}/games`)\n      .then((response) => response.json())\n      .then((data) => {\n        setGamesPlayedStats(data);\n        let slicedData = data.slice(0, 10);\n        setGamesPlayed(slicedData);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const fetchGamesToPlay = () => {\n    fetch(\n      `https://pyramid-race-api.herokuapp.com/users/${userId}/games_to_play`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setGamesPlayedStats(data);\n        let slicedData = data.slice(0, 10);\n        setGamesToPlay(slicedData);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    fetchGamesPlayed();\n    fetchGamesToPlay();\n  }, []);\n\n  useEffect(() => {\n    let player_stats = {\n      games_played: gamesPlayedStats.length,\n      games_won: gamesPlayedStats.filter((game) => game.winner_id === userId)\n        .length,\n      games_lost: gamesPlayedStats.filter(\n        (game) => game.winner_id !== userId && game.winner_id !== null\n      ).length,\n    };\n    setPlayerStats(player_stats);\n  }, [gamesPlayed]);\n\n  return (\n    <div className=\"GameInfoContainer\">\n      <div className=\"game-info-column col-lg-8\">\n        <h1 className=\"text-center\">Parties en cours</h1>\n        <br />\n        <div className=\"list-container\">\n          {gamesToPlay.map((game) => {\n            if (game.winner_id === null && game.player1_id == userId) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player2_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (game.winner_id === null && game.player2_id == userId) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player1_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            }\n          })}\n        </div>\n\n        <h1 className=\"text-center\">Parties terminées</h1>\n        <br />\n        <div className=\"list-container\">\n          {gamesPlayed.map((game) => {\n            if (game.winner_id == userId && game.player1_id == userId) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player2_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (\n              game.winner_id == userId &&\n              game.player2_id == userId\n            ) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player1_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (\n              game.winner_id &&\n              game.winner_id !== userId &&\n              game.player2_id == userId\n            ) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player1_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (\n              game.winner_id &&\n              game.winner_id !== userId &&\n              game.player1_id == userId\n            ) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player2_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            }\n          })}\n        </div>\n      </div>\n      <div className=\"game-info-column col-lg-3 player-infos-col\">\n        <PlayerInfos player_stats={playerStats} />\n      </div>\n    </div>\n  );\n};\n\nexport default GamePlayedList;\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/JumbotronGameInfos/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/PlayerInfos/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/GamePlayed/index.jsx",["160","161"],"import \"./style.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport Cookie from 'js-cookie'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst GamePlayed = ({ opponentId, winner_id, gameId }) => {\r\n  const tokenCookie = Cookie.get('token')\r\n  const [opponent, setOpponent] = useState({});\r\n  const history = useHistory()\r\n  const userId = useSelector((state) => state.id)\r\n  const categoriesArray = [\r\n    9,\r\n    10,\r\n    11,\r\n    12,\r\n    14,\r\n    15,\r\n    16,\r\n    17,\r\n    18,\r\n    19,\r\n    21,\r\n    22,\r\n    23,\r\n    24,\r\n    26,\r\n    27,\r\n    28,\r\n    31,\r\n    32,\r\n  ];\r\n\r\n  const getOpponentInfos = () => {\r\n    fetch(`https://pyramid-race-api.herokuapp.com/users/${opponentId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setOpponent(data);\r\n      })\r\n      .catch((error) => alert(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOpponentInfos();\r\n  }, []);\r\n\r\n\r\n  const startGame = (opponent_id) => {\r\n    const data = {\r\n      game: {\r\n        player1_id: userId,\r\n        player2_id: opponent_id,\r\n        difficulty: \"medium\",\r\n        category:\r\n          categoriesArray[Math.floor(Math.random() * categoriesArray.length)],\r\n      },\r\n    };\r\n\r\n    fetch(`https://pyramid-race-api.herokuapp.com/games`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Authorization: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        history.push(`/game/${response.id}`);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container card-game\">\r\n      <div className=\"row align-middle\">\r\n        <div className=\"col-md-8 col-lg-6 column\">\r\n          <div className=\"card gr-1\">\r\n            <div className=\"txt\">\r\n              {winner_id != opponentId && winner_id != null && (\r\n                <div>\r\n                  <h1>\r\n                    <b>Victoire</b>\r\n                  </h1>\r\n                  <p>\r\n                    Tu es le grand gagnant de cette partie ! ( calme toi quand\r\n                    meme)\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {winner_id === opponentId && (\r\n                <div>\r\n                  <h1>Défaite</h1>\r\n                  <p>\r\n                    Tu as perdu, à présent nous te regarderons avec le mépris\r\n                    que tu mérites !\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {winner_id === null && (\r\n                <div>\r\n                  <h1>\r\n                    <b>En cours</b>\r\n                  </h1>\r\n                  <p>La partie n'est pas encore terminée ! Quel suspens !</p>\r\n                </div>\r\n              )}\r\n\r\n              <small>Adversaire : {opponent.pseudo}</small>\r\n            </div>\r\n            {winner_id === null && <Link to={{pathname: `/game/${gameId}`}}>Jouer</Link>}\r\n            {winner_id !== null && <Link to=\"/\" onClick={() => startGame(opponentId)}>Rejouer</Link>}\r\n\r\n            <div className=\"ico-card\">\r\n              <i className=\"lni lni-pyramids\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePlayed;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/index.jsx",["162","163"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./style.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Cookie from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PlayerSuggestion from \"./PlayerSuggestion\";\r\n\r\nconst SearchBar = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const userId = useSelector((state) => state.id);\r\n  const tokenCookie = Cookie.get(\"token\");\r\n  const history = useHistory();\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  //Enables selecting the range of categories in the API and excluding the ones not containing enough questions\r\n  const arrayQuestions = [...Array(32 - 9 + 1)].map((item, index) => 9 + index);\r\n  const categoriesToBeRemoved = [13, 20, 25, 29, 30];\r\n  const categoriesArray = arrayQuestions.filter(\r\n    (item) => !categoriesToBeRemoved.includes(item)\r\n  );\r\n\r\n  const handleInputChange = (e) => {\r\n    const { value } = e.currentTarget;\r\n    setInput(value.replace(/\\s/, \"\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (input.length >= 3) {\r\n      fetch(`https://pyramid-race-api.herokuapp.com/users?pseudo=${input}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setSuggestions(data || []);\r\n        });\r\n    } else {\r\n      setSuggestions([]);\r\n    }\r\n  }, [input]);\r\n\r\n  const closeSearch = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const startGame = (opponentId) => {\r\n    const data = {\r\n      game: {\r\n        player1_id: userId,\r\n        player2_id: opponentId,\r\n        difficulty: \"medium\",\r\n        category:\r\n          categoriesArray[Math.floor(Math.random() * categoriesArray.length)],\r\n      },\r\n    };\r\n\r\n    fetch(`https://pyramid-race-api.herokuapp.com/games`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Authorization: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        history.push(`/game/${response.id}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container searchbar navbar-form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Chercher un joueur\"\r\n        onChange={handleInputChange}\r\n        value={input}\r\n      />\r\n      <div className=\"search\" onClick={closeSearch}></div>\r\n      <div className=\"suggestions\">\r\n        {suggestions.map((suggestion) => {\r\n          if (suggestion.id != userId) {\r\n            return (\r\n              <PlayerSuggestion\r\n                pseudo={suggestion.pseudo}\r\n                onClick={() => {\r\n                  startGame(suggestion.id);\r\n                }}\r\n                key={suggestion.id}\r\n              />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/PlayerSuggestion/index.jsx",[],["164","165"],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Victory/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Defeat/index.jsx",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":2,"column":27,"nodeType":"172","messageId":"173","endLine":2,"endColumn":33},{"ruleId":"170","severity":1,"message":"174","line":2,"column":35,"nodeType":"172","messageId":"173","endLine":2,"endColumn":40},{"ruleId":"170","severity":1,"message":"175","line":2,"column":42,"nodeType":"172","messageId":"173","endLine":2,"endColumn":48},{"ruleId":"176","severity":1,"message":"177","line":99,"column":23,"nodeType":"178","endLine":99,"endColumn":38},{"ruleId":"176","severity":1,"message":"177","line":106,"column":63,"nodeType":"178","endLine":106,"endColumn":78},{"ruleId":"176","severity":1,"message":"177","line":114,"column":23,"nodeType":"178","endLine":114,"endColumn":38},{"ruleId":"179","severity":1,"message":"180","line":51,"column":6,"nodeType":"181","endLine":51,"endColumn":17,"suggestions":"182"},{"ruleId":"179","severity":1,"message":"183","line":59,"column":6,"nodeType":"181","endLine":59,"endColumn":8,"suggestions":"184"},{"ruleId":"185","severity":1,"message":"186","line":70,"column":18,"nodeType":"187","messageId":"188","endLine":70,"endColumn":20},{"ruleId":"179","severity":1,"message":"189","line":77,"column":6,"nodeType":"181","endLine":77,"endColumn":12,"suggestions":"190"},{"ruleId":"185","severity":1,"message":"186","line":138,"column":18,"nodeType":"187","messageId":"188","endLine":138,"endColumn":20},{"ruleId":"185","severity":1,"message":"191","line":140,"column":25,"nodeType":"187","messageId":"188","endLine":140,"endColumn":27},{"ruleId":"185","severity":1,"message":"186","line":214,"column":18,"nodeType":"187","messageId":"188","endLine":214,"endColumn":20},{"ruleId":"185","severity":1,"message":"186","line":217,"column":25,"nodeType":"187","messageId":"188","endLine":217,"endColumn":27},{"ruleId":"170","severity":1,"message":"192","line":251,"column":9,"nodeType":"172","messageId":"173","endLine":251,"endColumn":18},{"ruleId":"170","severity":1,"message":"193","line":255,"column":9,"nodeType":"172","messageId":"173","endLine":255,"endColumn":20},{"ruleId":"170","severity":1,"message":"194","line":265,"column":9,"nodeType":"172","messageId":"173","endLine":265,"endColumn":20},{"ruleId":"170","severity":1,"message":"195","line":285,"column":9,"nodeType":"172","messageId":"173","endLine":285,"endColumn":16},{"ruleId":"185","severity":1,"message":"186","line":290,"column":15,"nodeType":"187","messageId":"188","endLine":290,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":295,"column":15,"nodeType":"187","messageId":"188","endLine":295,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":308,"column":27,"nodeType":"187","messageId":"188","endLine":308,"endColumn":29},{"ruleId":"185","severity":1,"message":"186","line":308,"column":59,"nodeType":"187","messageId":"188","endLine":308,"endColumn":61},{"ruleId":"185","severity":1,"message":"186","line":309,"column":27,"nodeType":"187","messageId":"188","endLine":309,"endColumn":29},{"ruleId":"196","severity":1,"message":"197","line":322,"column":9,"nodeType":"198","endLine":322,"endColumn":50},{"ruleId":"196","severity":1,"message":"197","line":325,"column":9,"nodeType":"198","endLine":325,"endColumn":47},{"ruleId":"196","severity":1,"message":"197","line":328,"column":9,"nodeType":"198","endLine":328,"endColumn":47},{"ruleId":"170","severity":1,"message":"199","line":1,"column":34,"nodeType":"172","messageId":"173","endLine":1,"endColumn":55},{"ruleId":"170","severity":1,"message":"200","line":1,"column":57,"nodeType":"172","messageId":"173","endLine":1,"endColumn":69},{"ruleId":"170","severity":1,"message":"201","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"185","severity":1,"message":"186","line":52,"column":15,"nodeType":"187","messageId":"188","endLine":52,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":64,"column":15,"nodeType":"187","messageId":"188","endLine":64,"endColumn":17},{"ruleId":"179","severity":1,"message":"202","line":18,"column":6,"nodeType":"181","endLine":18,"endColumn":17,"suggestions":"203"},{"ruleId":"179","severity":1,"message":"204","line":47,"column":6,"nodeType":"181","endLine":47,"endColumn":8,"suggestions":"205"},{"ruleId":"179","severity":1,"message":"206","line":41,"column":6,"nodeType":"181","endLine":41,"endColumn":8,"suggestions":"207"},{"ruleId":"179","severity":1,"message":"208","line":53,"column":6,"nodeType":"181","endLine":53,"endColumn":19,"suggestions":"209"},{"ruleId":"210","severity":1,"message":"211","line":61,"column":35,"nodeType":"212","messageId":"213","endLine":61,"endColumn":37},{"ruleId":"185","severity":1,"message":"186","line":62,"column":60,"nodeType":"187","messageId":"188","endLine":62,"endColumn":62},{"ruleId":"185","severity":1,"message":"186","line":71,"column":67,"nodeType":"187","messageId":"188","endLine":71,"endColumn":69},{"ruleId":"210","severity":1,"message":"211","line":87,"column":35,"nodeType":"212","messageId":"213","endLine":87,"endColumn":37},{"ruleId":"185","severity":1,"message":"186","line":88,"column":32,"nodeType":"187","messageId":"188","endLine":88,"endColumn":34},{"ruleId":"185","severity":1,"message":"186","line":88,"column":61,"nodeType":"187","messageId":"188","endLine":88,"endColumn":63},{"ruleId":"185","severity":1,"message":"186","line":98,"column":30,"nodeType":"187","messageId":"188","endLine":98,"endColumn":32},{"ruleId":"185","severity":1,"message":"186","line":99,"column":31,"nodeType":"187","messageId":"188","endLine":99,"endColumn":33},{"ruleId":"185","severity":1,"message":"186","line":112,"column":31,"nodeType":"187","messageId":"188","endLine":112,"endColumn":33},{"ruleId":"185","severity":1,"message":"186","line":125,"column":31,"nodeType":"187","messageId":"188","endLine":125,"endColumn":33},{"ruleId":"179","severity":1,"message":"214","line":45,"column":6,"nodeType":"181","endLine":45,"endColumn":8,"suggestions":"215"},{"ruleId":"185","severity":1,"message":"191","line":80,"column":26,"nodeType":"187","messageId":"188","endLine":80,"endColumn":28},{"ruleId":"210","severity":1,"message":"211","line":78,"column":39,"nodeType":"212","messageId":"213","endLine":78,"endColumn":41},{"ruleId":"185","severity":1,"message":"191","line":79,"column":29,"nodeType":"187","messageId":"188","endLine":79,"endColumn":31},{"ruleId":"166","replacedBy":"216"},{"ruleId":"168","replacedBy":"217"},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentQuestion' and 'currentQuestionIndex'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentQuestion' needs the current value of 'currentQuestionIndex'.","ArrayExpression",["220"],"React Hook useEffect has a missing dependency: 'fetchGame'. Either include it or remove the dependency array.",["221"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'count', 'fetchHistoryPlayer1', 'fetchQuestions', and 'userId'. Either include them or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.",["222"],"Expected '!==' and instead saw '!='.","'alertUser' is assigned a value but never used.","'destroyGame' is assigned a value but never used.","'forfeitGame' is assigned a value but never used.","'element' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AUTHENTICATION_FAILED' is defined but never used.","'LOAD_ACCOUNT' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'reset' and 'start'. Either include them or remove the dependency array.",["223"],"React Hook useEffect has a missing dependency: 'fetchPossibleOpponents'. Either include it or remove the dependency array.",["224"],"React Hook useEffect has missing dependencies: 'fetchGamesPlayed' and 'fetchGamesToPlay'. Either include them or remove the dependency array.",["225"],"React Hook useEffect has missing dependencies: 'gamesPlayedStats' and 'userId'. Either include them or remove the dependency array.",["226"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'getOpponentInfos'. Either include it or remove the dependency array.",["227"],["218"],["219"],"no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [currentQuestion, currentQuestionIndex, questions]",{"range":"244","text":"245"},"Update the dependencies array to be: [fetchGame]",{"range":"246","text":"247"},"Update the dependencies array to be: [count, fetchHistoryPlayer1, fetchQuestions, game, userId]",{"range":"248","text":"249"},"Update the dependencies array to be: [reset, resetTick, start]",{"range":"250","text":"251"},"Update the dependencies array to be: [fetchPossibleOpponents]",{"range":"252","text":"253"},"Update the dependencies array to be: [fetchGamesPlayed, fetchGamesToPlay]",{"range":"254","text":"255"},"Update the dependencies array to be: [gamesPlayed, gamesPlayedStats, userId]",{"range":"256","text":"257"},"Update the dependencies array to be: [getOpponentInfos]",{"range":"258","text":"259"},[1723,1734],"[currentQuestion, currentQuestionIndex, questions]",[1860,1862],"[fetchGame]",[2251,2257],"[count, fetchHistoryPlayer1, fetchQuestions, game, userId]",[390,401],"[reset, resetTick, start]",[1023,1025],"[fetchPossibleOpponents]",[1306,1308],"[fetchGamesPlayed, fetchGamesToPlay]",[1673,1686],"[gamesPlayed, gamesPlayedStats, userId]",[965,967],"[getOpponentInfos]"]