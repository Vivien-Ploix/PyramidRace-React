[{"/home/vivien/next/projet_final/PyramidRace-React/src/index.jsx":"1","/home/vivien/next/projet_final/PyramidRace-React/src/redux/store.js":"2","/home/vivien/next/projet_final/PyramidRace-React/src/Components/Footer/index.jsx":"3","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authReducer.js":"4","/home/vivien/next/projet_final/PyramidRace-React/src/Components/NavBar/index.jsx":"5","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/index.jsx":"6","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Signup/index.jsx":"7","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Defeat/index.jsx":"8","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Login/index.jsx":"9","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/index.jsx":"10","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Victory/index.jsx":"11","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/index.jsx":"12","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authTypes.js":"13","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authActions.js":"14","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Modal/index.jsx":"15","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Countdown/index.jsx":"16","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/HomeSection/index.jsx":"17","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/JumbotronGameInfos/index.jsx":"18","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/Jumbotron/index.jsx":"19","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/index.jsx":"20","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/QuestionCard/index.jsx":"21","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/index.jsx":"22","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/PlayerInfos/index.jsx":"23","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/GamePlayed/index.jsx":"24","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/PlayerSuggestion/index.jsx":"25"},{"size":1712,"mtime":1608046502449,"results":"26","hashOfConfig":"27"},{"size":557,"mtime":1607529790098,"results":"28","hashOfConfig":"27"},{"size":631,"mtime":1607694872866,"results":"29","hashOfConfig":"27"},{"size":710,"mtime":1607529226101,"results":"30","hashOfConfig":"27"},{"size":4508,"mtime":1607694872883,"results":"31","hashOfConfig":"27"},{"size":245,"mtime":1608041940206,"results":"32","hashOfConfig":"27"},{"size":4376,"mtime":1607676999093,"results":"33","hashOfConfig":"27"},{"size":122,"mtime":1608045543123,"results":"34","hashOfConfig":"27"},{"size":3842,"mtime":1607676999087,"results":"35","hashOfConfig":"27"},{"size":315,"mtime":1607959795676,"results":"36","hashOfConfig":"27"},{"size":133,"mtime":1608046021651,"results":"37","hashOfConfig":"27"},{"size":11386,"mtime":1608073396408,"results":"38","hashOfConfig":"27"},{"size":205,"mtime":1607522325087,"results":"39","hashOfConfig":"27"},{"size":375,"mtime":1607529226095,"results":"40","hashOfConfig":"27"},{"size":2228,"mtime":1608064965974,"results":"41","hashOfConfig":"27"},{"size":515,"mtime":1608061741994,"results":"42","hashOfConfig":"27"},{"size":3850,"mtime":1608043791230,"results":"43","hashOfConfig":"27"},{"size":1426,"mtime":1607959795568,"results":"44","hashOfConfig":"27"},{"size":3629,"mtime":1608047532047,"results":"45","hashOfConfig":"27"},{"size":4469,"mtime":1608065103909,"results":"46","hashOfConfig":"27"},{"size":1616,"mtime":1608074206609,"results":"47","hashOfConfig":"27"},{"size":2807,"mtime":1608039785597,"results":"48","hashOfConfig":"27"},{"size":795,"mtime":1608037787060,"results":"49","hashOfConfig":"27"},{"size":3318,"mtime":1608037787031,"results":"50","hashOfConfig":"27"},{"size":276,"mtime":1608039794249,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1ukoblb",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/vivien/next/projet_final/PyramidRace-React/src/index.jsx",[],["112","113"],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/store.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Components/Footer/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authReducer.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Components/NavBar/index.jsx",["114","115","116","117","118","119"],"import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logoutSuccess } from \"../../redux/authentication/authActions\";\r\n\r\nconst NavBar = () => {\r\n  const tokenCookie = Cookies.get(\"token\");\r\n  const isLoggedIn = useSelector((state) => state.isLoggedIn);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickLogout = () => {\r\n    fetch(\"https://pyramid-race-api.herokuapp.com/logout\", {\r\n      method: \"delete\",\r\n      Bearer: {\r\n        token: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(Cookies.get(\"token\"));\r\n        Cookies.remove(\"token\");\r\n        dispatch(logoutSuccess());\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"isLoggedIn changed\");\r\n  }, [isLoggedIn]);\r\n\r\n  return (\r\n    <div className=\"navgition navgition-transparent\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <nav className=\"navbar navbar-expand-lg\">\r\n              <Link to=\"/\">\r\n                <img src=\"/assets/images/logo.svg\" alt=\"Logo\"></img>\r\n              </Link>\r\n              <button\r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbarOne\"\r\n                aria-controls=\"navbarOne\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n              >\r\n                <span className=\"toggler-icon\"></span>\r\n                <span className=\"toggler-icon\"></span>\r\n                <span className=\"toggler-icon\"></span>\r\n              </button>\r\n              <div\r\n                className=\"collapse navbar-collapse sub-menu-bar\"\r\n                id=\"navbarOne\"\r\n              >\r\n                <ul className=\"navbar-nav m-auto\">\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/\">Accueil</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"page-scroll\" href=\"/#information\">\r\n                      Informations\r\n                    </a>\r\n                  </li>\r\n                  {tokenCookie && (\r\n                    <>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/gameinfos\">Profil</Link>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/\" onClick={handleClickLogout}>\r\n                          Se déconnecter\r\n                        </Link>\r\n                      </li>\r\n                    </>\r\n                  )}\r\n                  {!tokenCookie && (\r\n                    <>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/sign-up\">S'inscrire</Link>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/login\">Se connecter</Link>\r\n                      </li>\r\n                    </>\r\n                  )}\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"navbar-social d-none d-sm-flex align-items-center\">\r\n                <span>NOS RESEAUX</span>\r\n                <ul>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://www.facebook.com/PyramidRace\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"lni-facebook-filled\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"https://twitter.com/RacePyramid\" target=\"_blank\">\r\n                      {\" \"}\r\n                      <i className=\"lni-twitter-original\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://www.instagram.com/pyramid.race/\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"lni-instagram-original\"></i>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Signup/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Defeat/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Login/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Victory/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/index.jsx",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142"],"import \"./style.scss\";\nimport React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport Cookie from \"js-cookie\";\nimport QuestionCard from \"./QuestionCard\";\nimport Pyramid from \"./assets/pyramid.png\";\nimport Perso1 from \"./assets/perso1.png\";\nimport Perso2 from \"./assets/perso2.png\";\nimport Countdown from \"./Countdown/index\";\nimport ModalDiv from \"./Modal/index\";\nimport { motion } from \"framer-motion\";\nimport { Prompt } from \"react-router-dom\";\n\nconst Game = () => {\n  let { id } = useParams();\n  const userId = useSelector((state) => state.id);\n  const tokenCookie = Cookie.get(\"token\");\n  const [game, setGame] = useState({});\n  const [questions, setQuestions] = useState([]);\n  const [count, setCount] = useState(0);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [gameOn, setGameOn] = useState(false);\n  const [newQuestionTime, setNewQuestionTime] = useState(new Date(Date.now()));\n  const [currentStep, setCurrentStep] = useState(0);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [gameHistories, setGameHistories] = useState([]);\n  const [perso1animation, setPerso1Animation] = useState({ x: 0, y: 0 });\n  const [perso2animation, setPerso2Animation] = useState({ x: 0, y: 0 });\n  const [firstGameHistory, setFirstGameHistory] = useState({});\n  const history = useHistory();\n  const pyramidRef = useRef();\n  const [count2, setCount2] = useState(0);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n    history.push(\"/gameinfos\");\n  };\n\n  useEffect(() => {\n    if (questions.length === 12) {\n      setCurrentQuestion(questions[currentQuestionIndex]);\n      setGameOn(true);\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  }, [questions]);\n\n  useEffect(() => {\n    fetchGame();\n  }, []);\n\n  useEffect(() => {}, [newQuestionTime]);\n\n  useEffect(() => {\n    setCount(count + 1);\n    if (count === 1) {\n      if (userId == game.player2_id) {\n        fetchHistoryPlayer1();\n      }\n      fetchQuestions();\n    }\n  }, [game]);\n\n  const fetchGame = () => {\n    fetch(`https://pyramid-race-api.herokuapp.com/games/${id}`)\n      .then((response) => response.json())\n      .then((data) => setGame(data))\n      .catch((error) => console.log(error));\n  };\n\n  const fetchQuestions = () => {\n    fetch(\n      `https://opentdb.com/api.php?amount=12&category=${game.category}&difficulty=${game.difficulty}&type=multiple`\n    )\n      .then((response) => response.json())\n      .then((data) => setQuestions(data.results));\n  };\n\n  const fetchHistoryPlayer1 = () => {\n    fetch(`https://pyramid-race-api.herokuapp.com/games/${id}/game_histories`)\n      .then((response) => response.json())\n      .then((data) => {\n        setGameHistories(data);\n        console.log(data[0]);\n        setFirstGameHistory(data[0]);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const gameEnd = () => {\n    let player1_correct_answers = gameHistories.filter(\n      (game_history) => game_history.response_correct === true\n    ).length;\n    let player1_wrong_answers = gameHistories.filter(\n      (game_history) => game_history.response_correct !== true\n    ).length;\n    let player1_step = player1_correct_answers - player1_wrong_answers;\n    let winner_id;\n    if (player1_step >= currentStep) {\n      winner_id = game.player1_id;\n    } else {\n      winner_id = game.player2_id;\n    }\n    console.log(player1_correct_answers);\n    console.log(player1_wrong_answers);\n    console.log(player1_step);\n    console.log(winner_id);\n\n    const data = {\n      game: {\n        winner_id: winner_id,\n        turn: \"gameEnded\",\n      },\n    };\n    fetch(`https://pyramid-race-api.herokuapp.com/games/${id}`, {\n      method: \"put\",\n      headers: {\n        Authorization: `${tokenCookie}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    }).then((response) => {\n      if (userId == winner_id) {\n        history.push(`/games/${id}/victory`);\n      } else if (userId != winner_id) {\n        history.push(`/games/${id}/defeat`);\n      }\n    });\n  };\n\n  const nextTurn = () => {\n    const data = {\n      game: {\n        turn: \"player2\",\n      },\n    };\n    fetch(`https://pyramid-race-api.herokuapp.com/games/${id}`, {\n      method: \"put\",\n      headers: {\n        Authorization: `${tokenCookie}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  };\n\n  const nextQuestion = (answer_choice, correct_answer) => {\n    const data = {\n      game_history: {\n        user_id: userId,\n        game_id: id,\n        response_correct:\n          !!answer_choice &&\n          !!correct_answer &&\n          answer_choice === correct_answer,\n        question_time: newQuestionTime,\n        response_time: new Date(Date.now()),\n      },\n    };\n    fetch(`https://pyramid-race-api.herokuapp.com/game_histories`, {\n      method: \"post\",\n      headers: {\n        Authorization: `${tokenCookie}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    if (answer_choice && answer_choice === correct_answer && currentStep < 5) {\n      setCurrentStep(currentStep + 1);\n    } else if (\n      answer_choice &&\n      answer_choice === correct_answer &&\n      currentStep === 5\n    ) {\n      setCurrentStep(currentStep + 1);\n      setGameOn(false);\n      setCurrentQuestion({});\n      if (userId == game.player1_id) {\n        nextTurn();\n        openModal();\n      } else if (userId == game.player2_id) {\n        gameEnd();\n      }\n    } else if (\n      (!answer_choice && currentStep > 0) ||\n      (answer_choice !== correct_answer && currentStep > 0)\n    ) {\n      setCurrentStep(currentStep - 1);\n    }\n\n    if (currentQuestionIndex < 12) {\n      setCurrentQuestion(questions[currentQuestionIndex]);\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setNewQuestionTime(new Date(Date.now()));\n    } else {\n      setGameOn(false);\n      setCurrentQuestion({});\n      setCurrentQuestionIndex(\"\");\n      if (userId == game.player1_id) {\n        nextTurn();\n        openModal();\n      } else if (userId == game.player2_id) {\n        gameEnd();\n      }\n    }\n  };\n\n  // Prompt before leaving page\n\n  // useEffect(() => {\n\n  //   const usableCallback = () => (\n  //     userId == game.player1_id ? destroyGame() : forfeitGame()\n  //   );\n\n  //   window.addEventListener('beforeunload', alertUser)\n  //   window.addEventListener('unload', usableCallback)\n\n  //   return () => {\n  //     window.removeEventListener('beforeunload', alertUser)\n  //     window.removeEventListener('unload', usableCallback)\n  //   }\n  // }, [])\n\n  const alertUser = (e) => {\n    e.preventDefault();\n    e.returnValue = \"\";\n  };\n  const destroyGame = () => {\n    if (!gameOn) {\n      return;\n    }\n    fetch(`https://pyramid-race-api.herokuapp.com/games/${id}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: `${tokenCookie}`,\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n\n  const forfeitGame = () => {\n    if (!gameOn) {\n      return;\n    }\n    const data = {\n      game: {\n        winner_id: game.player1_id,\n        turn: \"gameEnded\",\n      },\n    };\n    fetch(`https://pyramid-race-api.herokuapp.com/games/${id}`, {\n      method: \"put\",\n      headers: {\n        Authorization: `${tokenCookie}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  };\n\n  const movePlayer1 = (step) => {\n    const pyramidHeight = pyramidRef.current.getBoundingClientRect().height;\n    const pyramidWidth = pyramidRef.current.getBoundingClientRect().width;\n    const marchHeight = pyramidHeight / 6.57;\n    const groundHeight = pyramidHeight / 100;\n    const marchWidth = pyramidWidth / 2 / 7;\n\n    if (step >= 0) {\n      if (step < 6) {\n        setPerso1Animation({\n          x: step * marchWidth,\n          y: -step * marchHeight - groundHeight,\n        });\n      } else if (step === 6) {\n        setPerso1Animation({\n          x: step * marchWidth + marchWidth / 1.3,\n          y: -5 * marchHeight - groundHeight,\n        });\n      }\n    } else if (step < 0) {\n      if (step > -6) {\n        setPerso2Animation({\n          x: step * marchWidth,\n          y: step * marchHeight - groundHeight,\n        });\n      } else if (step === -6) {\n        setPerso2Animation({\n          x: step * marchWidth - marchWidth / 1.3,\n          y: -5 * marchHeight - groundHeight,\n        });\n      }\n    }\n  };\n\n  const movePlayer2 = () => {\n    let step = 0;\n    const startOpponentGame = Date.parse(gameHistories[0].question_time);\n    gameHistories.forEach((game_history) => {\n      console.log(Date.parse(game_history.response_time) - startOpponentGame);\n      console.log(game_history.response_correct);\n      setTimeout(function () {\n        if (game_history.response_correct) {\n          step += 1;\n        } else {\n          step -= 1;\n        }\n        movePlayer1(-step);\n      }, Date.parse(game_history.response_time) - startOpponentGame);\n    });\n  };\n\n  useEffect(() => {\n    console.log(currentStep);\n    movePlayer1(currentStep);\n  }, [currentStep]);\n\n  useEffect(() => {\n    console.log(perso1animation);\n  }, [perso1animation]);\n\n  useEffect(() => {\n    console.log(gameHistories);\n    console.log(firstGameHistory);\n    setCount2(count2 + 1);\n    if (count2 === 1) {\n      movePlayer2();\n    }\n  }, [firstGameHistory]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", movePlayer1);\n    return () => {\n      window.removeEventListener(\"resize\", movePlayer1);\n    };\n  }, []);\n\n  return (\n    <div className=\"game_page\">\n      {userId == game.player1_id && gameOn && (\n        <Prompt\n          message={() => \"Si vous quittez cette page la partie sera perdue !\"}\n        />\n      )}\n      {userId == game.player2_id && gameOn && (\n        <Prompt\n          message={() =>\n            \"Si vous quittez cette page, vous serez automatiquement déclaré forfait !\"\n          }\n        />\n      )}\n\n      <ModalDiv\n        modalIsOpen={modalIsOpen}\n        closeModal={closeModal}\n        step={currentStep}\n      />\n      {((gameOn && userId == game.player2_id && game.turn == \"player2\") ||\n        (gameOn && userId == game.player1_id && game.turn === \"player1\")) && (\n        <>\n          <Countdown onExpire={nextQuestion} resetTick={currentQuestionIndex} />\n          <QuestionCard\n            question={currentQuestion.question}\n            correct_answer={currentQuestion.correct_answer}\n            incorrect_answers={currentQuestion.incorrect_answers}\n            nextQuestion={nextQuestion}\n          />\n        </>\n      )}\n      <div className=\"game_content\">\n        <img className=\"pyramid\" src={Pyramid} ref={pyramidRef} />\n        <motion.div\n          className=\"perso1\"\n          animate={perso1animation}\n          transition={{ type: \"Tween\", stiffness: 100 }}\n        >\n          <img className=\"perso\" src={Perso1} />\n        </motion.div>\n        <motion.div\n          className=\"perso2\"\n          animate={perso2animation}\n          transition={{ type: \"Tween\", stiffness: 100 }}\n        >\n          <img className=\"perso\" src={Perso2} />\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authTypes.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authActions.js",["143","144"],"import { AUTHENTICATION_SUCCESS, AUTHENTICATION_FAILED, LOAD_ACCOUNT, LOGOUT_SUCCESS } from './authTypes';\n\nexport const authSuccess = (response) => {\n    return {\n        type: AUTHENTICATION_SUCCESS,\n        id: response.data.id,\n        attributes: response.data.attributes,\n    };\n};\n\nexport const logoutSuccess = () => {\n    return {\n        type: LOGOUT_SUCCESS\n    }\n}","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Modal/index.jsx",["145","146","147"],"import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement(\"#root\");\r\n\r\nconst ModalDiv = ({ modalIsOpen, closeModal, step }) => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        {step < 2 && (\r\n          <div>\r\n            <h2>Ok, tu as atteins l'étage {step} de la pyramide !</h2>\r\n            <div>\r\n              C'est vraiment ridicule, ton adversaire n'aura pas de mal a té\r\n              vaincre... va te cacher\r\n            </div>\r\n            <button onClick={closeModal}>Revenir à mon profil</button>\r\n          </div>\r\n        )}\r\n        {step >= 2 && step <= 4 && (\r\n          <div>\r\n            <h2>Pas mal,tu as atteins l'étage {step} de la pyramide !</h2>\r\n            <div>\r\n              Résultat honorable, voyons si ton adversaire peut faire mieux !\r\n            </div>\r\n            <button onClick={closeModal}>Revenir à mon profil</button>\r\n          </div>\r\n        )}\r\n        {step == 5 && (\r\n          <div>\r\n            <h2>Tu as atteins l'étage {step} de la pyramide !</h2>\r\n            <div>\r\n              A une marche du sommet de la pyramide ! Belle performance, ton\r\n              adversaire va devoir se surpasser !\r\n            </div>\r\n            <button onClick={closeModal}>Revenir à mon profil</button>\r\n          </div>\r\n        )}\r\n        {step == 6 && (\r\n          <div>\r\n            <h2>Tu as atteins le sommet de la pyramide !!!</h2>\r\n            <div>\r\n              Bravo ! Le Dieu serpent est fier de toi ! Si ton adversaire ne\r\n              fait pas preuve d'autant de force, tu gagneras cette bataille !\r\n            </div>\r\n            <button onClick={closeModal}>Revenir à mon profil</button>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalDiv;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Countdown/index.jsx",["148"],"import React, { useEffect } from \"react\";\r\n\r\nimport { useCountdownTimer } from \"use-countdown-timer\";\r\n\r\nconst Countdown = ({ onExpire, resetTick }) => {\r\n  const { countdown, reset, start } = useCountdownTimer({\r\n    timer: 1000 * 20000,\r\n    autostart: true,\r\n    onExpire,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (resetTick === 0) {\r\n      return;\r\n    }\r\n    reset();\r\n    start();\r\n  }, [resetTick]);\r\n\r\n  return <div className=\"countdown\">Countdown : {countdown / 1000}</div>;\r\n};\r\n\r\nexport default Countdown;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/HomeSection/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/JumbotronGameInfos/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/Jumbotron/index.jsx",["149"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Cookie from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Jumbotron = () => {\r\n  const userId = useSelector((state) => state.id);\r\n  const tokenCookie = Cookie.get(\"token\");\r\n  const history = useHistory();\r\n  const [possibleOpponents, setPossibleOpponents] = useState([]);\r\n  const categoriesArray = [\r\n    9,\r\n    10,\r\n    11,\r\n    12,\r\n    14,\r\n    15,\r\n    16,\r\n    17,\r\n    18,\r\n    19,\r\n    21,\r\n    22,\r\n    23,\r\n    24,\r\n    26,\r\n    27,\r\n    28,\r\n    31,\r\n    32,\r\n  ];\r\n\r\n  const fetchPossibleOpponents = () => {\r\n    fetch(\r\n      `https://pyramid-race-api.herokuapp.com/users/${userId}/possible_opponents`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setPossibleOpponents(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPossibleOpponents();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(possibleOpponents);\r\n  }, [possibleOpponents]);\r\n\r\n  const startGame = () => {\r\n    const data = {\r\n      game: {\r\n        player1_id: userId,\r\n        player2_id:\r\n          possibleOpponents[\r\n            Math.floor(Math.random() * possibleOpponents.length)\r\n          ].id,\r\n        difficulty: \"medium\",\r\n        category:\r\n          categoriesArray[Math.floor(Math.random() * categoriesArray.length)],\r\n      },\r\n    };\r\n\r\n    fetch(`https://pyramid-race-api.herokuapp.com/games`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Authorization: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        history.push(`/game/${response.id}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"home\"\r\n      className=\"header-hero bg_cover\"\r\n      style={{ backgroundImage: `url(${\"assets/images/header-bg.jpg\"})` }}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xl-8 col-lg-10\">\r\n            <div className=\"header-content text-center\">\r\n              <h3 className=\"header-title\">\r\n                Bienvenue sur Pyramid <em>Race</em> !\r\n              </h3>\r\n              <h2>Confronte ta culture générale avec d'autres joueurs !</h2>\r\n              <p className=\"text\">\r\n                Prouve que tu es le meilleur en atteignant le haut de la\r\n                pyramide ou tu erreras dans ses labyrinthes jusqu'à ce que tu te\r\n                transformes en burrito avarié !\r\n              </p>\r\n              <ul className=\"header-btn\">\r\n                {userId === null && (\r\n                  <li>\r\n                    <Link to=\"/sign-up\" className=\"main-btn btn-one\">\r\n                      Je veux jouer\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n                {userId !== null && (\r\n                  <li>\r\n                    <Link\r\n                      to=\"/\"\r\n                      className=\"main-btn btn-one\"\r\n                      onClick={startGame}\r\n                    >\r\n                      Je veux jouer\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-shape\">\r\n        <img src=\"assets/images/header-shape.svg\" alt=\"shape\"></img>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jumbotron;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/index.jsx",["150","151","152","153","154","155","156","157","158","159","160","161","162","163"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport GamePlayed from \"./GamePlayed\";\nimport PlayerInfos from \"./../PlayerInfos\";\nimport \"./style.scss\";\n\nconst GamePlayedList = () => {\n  const userId = useSelector((state) => state.id);\n  const [gamesPlayed, setGamesPlayed] = useState([]);\n  const [gamesToPlay, setGamesToPlay] = useState([]);\n  const [playerStats, setPlayerStats] = useState({});\n  const [gamesPlayedStats, setGamesPlayedStats] = useState([]);\n\n  const fetchGamesPlayed = () => {\n    fetch(`https://pyramid-race-api.herokuapp.com/users/${userId}/games`)\n      .then((response) => response.json())\n      .then((data) => {\n        setGamesPlayedStats(data);\n        let slicedData = data.slice(0, 10);\n        setGamesPlayed(slicedData);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const fetchGamesToPlay = () => {\n    fetch(\n      `https://pyramid-race-api.herokuapp.com/users/${userId}/games_to_play`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setGamesPlayedStats(data);\n        let slicedData = data.slice(0, 10);\n        setGamesToPlay(slicedData);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    fetchGamesPlayed();\n    fetchGamesToPlay();\n  }, []);\n\n  useEffect(() => {\n    let player_stats = {\n      games_played: gamesPlayedStats.length,\n      games_won: gamesPlayedStats.filter((game) => game.winner_id == userId)\n        .length,\n      games_lost: gamesPlayedStats.filter(\n        (game) => game.winner_id != userId && game.winner_id !== null\n      ).length,\n    };\n    setPlayerStats(player_stats);\n  }, [gamesPlayed]);\n\n  return (\n    <div className=\"GameInfoContainer\">\n      <div className=\"game-info-column col-lg-8\">\n        <h1 className=\"text-center\">Parties en cours</h1>\n        <br />\n        <div className=\"list-container\">\n          {gamesToPlay.map((game) => {\n            if (game.winner_id === null && game.player1_id == userId) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player2_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (game.winner_id === null && game.player2_id == userId) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player1_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            }\n          })}\n        </div>\n\n        <h1 className=\"text-center\">Parties terminées</h1>\n        <br />\n        <div className=\"list-container\">\n          {gamesPlayed.map((game) => {\n            if (game.winner_id == userId && game.player1_id == userId) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player2_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (game.winner_id == userId && game.player2_id == userId) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player1_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (\n              game.winner_id &&\n              game.winner_id !== userId &&\n              game.player2_id == userId\n            ) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player1_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (\n              game.winner_id &&\n              game.winner_id !== userId &&\n              game.player1_id == userId\n            ) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player2_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            }\n          })}\n        </div>\n      </div>\n      <div className=\"game-info-column col-lg-3 player-infos-col\">\n        <PlayerInfos player_stats={playerStats} />\n      </div>\n    </div>\n  );\n};\n\nexport default GamePlayedList;\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/QuestionCard/index.jsx",["164"],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/index.jsx",["165","166"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./style.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Cookie from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PlayerSuggestion from \"./PlayerSuggestion\";\r\n\r\nconst SearchBar = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const userId = useSelector((state) => state.id);\r\n  const tokenCookie = Cookie.get(\"token\");\r\n  const history = useHistory();\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  //Enables selecting the range of categories in the API and excluding the ones not containing enough questions\r\n  const arrayQuestions = [...Array(32 - 9 + 1)].map((item, index) => 9 + index);\r\n  const categoriesToBeRemoved = [13, 20, 25, 29, 30];\r\n  const categoriesArray = arrayQuestions.filter(\r\n    (item) => !categoriesToBeRemoved.includes(item)\r\n  );\r\n\r\n  const handleInputChange = (e) => {\r\n    const { value } = e.currentTarget;\r\n    setInput(value.replace(/\\s/, \"\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (input.length >= 3) {\r\n      fetch(`https://pyramid-race-api.herokuapp.com/users?pseudo=${input}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setSuggestions(data || []);\r\n        });\r\n    } else {\r\n      setSuggestions([]);\r\n    }\r\n  }, [input]);\r\n\r\n  const closeSearch = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const startGame = (opponentId) => {\r\n    const data = {\r\n      game: {\r\n        player1_id: userId,\r\n        player2_id: opponentId,\r\n        difficulty: \"medium\",\r\n        category:\r\n          categoriesArray[Math.floor(Math.random() * categoriesArray.length)],\r\n      },\r\n    };\r\n\r\n    fetch(`https://pyramid-race-api.herokuapp.com/games`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Authorization: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        history.push(`/game/${response.id}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container searchbar navbar-form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Chercher un joueur\"\r\n        onChange={handleInputChange}\r\n        value={input}\r\n      />\r\n      <div className=\"search\" onClick={closeSearch}></div>\r\n      <div className=\"suggestions\">\r\n        {suggestions.map((suggestion) => {\r\n          if (suggestion.id != userId) {\r\n            return (\r\n              <PlayerSuggestion\r\n                pseudo={suggestion.pseudo}\r\n                onClick={() => {\r\n                  startGame(suggestion.id);\r\n                }}\r\n                key={suggestion.id}\r\n              />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/PlayerInfos/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/GamePlayed/index.jsx",["167","168"],"import \"./style.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport Cookie from 'js-cookie'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst GamePlayed = ({ opponentId, winner_id, gameId }) => {\r\n  const tokenCookie = Cookie.get('token')\r\n  const [opponent, setOpponent] = useState({});\r\n  const history = useHistory()\r\n  const userId = useSelector((state) => state.id)\r\n  const categoriesArray = [\r\n    9,\r\n    10,\r\n    11,\r\n    12,\r\n    14,\r\n    15,\r\n    16,\r\n    17,\r\n    18,\r\n    19,\r\n    21,\r\n    22,\r\n    23,\r\n    24,\r\n    26,\r\n    27,\r\n    28,\r\n    31,\r\n    32,\r\n  ];\r\n\r\n  const getOpponentInfos = () => {\r\n    fetch(`https://pyramid-race-api.herokuapp.com/users/${opponentId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setOpponent(data);\r\n      })\r\n      .catch((error) => alert(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOpponentInfos();\r\n  }, []);\r\n\r\n\r\n  const startGame = (opponent_id) => {\r\n    const data = {\r\n      game: {\r\n        player1_id: userId,\r\n        player2_id: opponent_id,\r\n        difficulty: \"medium\",\r\n        category:\r\n          categoriesArray[Math.floor(Math.random() * categoriesArray.length)],\r\n      },\r\n    };\r\n\r\n    fetch(`https://pyramid-race-api.herokuapp.com/games`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Authorization: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        history.push(`/game/${response.id}`);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container card-game\">\r\n      <div className=\"row align-middle\">\r\n        <div className=\"col-md-8 col-lg-6 column\">\r\n          <div className=\"card gr-1\">\r\n            <div className=\"txt\">\r\n              {winner_id != opponentId && winner_id != null && (\r\n                <div>\r\n                  <h1>\r\n                    <b>Victoire</b>\r\n                  </h1>\r\n                  <p>\r\n                    Tu es le grand gagnant de cette partie ! ( calme toi quand\r\n                    meme)\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {winner_id === opponentId && (\r\n                <div>\r\n                  <h1>Défaite</h1>\r\n                  <p>\r\n                    Tu as perdu, à présent nous te regarderons avec le mépris\r\n                    que tu mérites !\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {winner_id === null && (\r\n                <div>\r\n                  <h1>\r\n                    <b>En cours</b>\r\n                  </h1>\r\n                  <p>La partie n'est pas encore terminée ! Quel suspens !</p>\r\n                </div>\r\n              )}\r\n\r\n              <small>Adversaire : {opponent.pseudo}</small>\r\n            </div>\r\n            {winner_id === null && <Link to={{pathname: `/game/${gameId}`}}>Jouer</Link>}\r\n            {winner_id !== null && <Link to=\"/\" onClick={() => startGame(opponentId)}>Rejouer</Link>}\r\n\r\n            <div className=\"ico-card\">\r\n              <i className=\"lni lni-pyramids\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePlayed;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/PlayerSuggestion/index.jsx",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":2,"column":27,"nodeType":"175","messageId":"176","endLine":2,"endColumn":33},{"ruleId":"173","severity":1,"message":"177","line":2,"column":35,"nodeType":"175","messageId":"176","endLine":2,"endColumn":40},{"ruleId":"173","severity":1,"message":"178","line":2,"column":42,"nodeType":"175","messageId":"176","endLine":2,"endColumn":48},{"ruleId":"179","severity":1,"message":"180","line":99,"column":23,"nodeType":"181","endLine":99,"endColumn":38},{"ruleId":"179","severity":1,"message":"180","line":106,"column":63,"nodeType":"181","endLine":106,"endColumn":78},{"ruleId":"179","severity":1,"message":"180","line":114,"column":23,"nodeType":"181","endLine":114,"endColumn":38},{"ruleId":"173","severity":1,"message":"182","line":2,"column":46,"nodeType":"175","messageId":"176","endLine":2,"endColumn":61},{"ruleId":"183","severity":1,"message":"184","line":51,"column":6,"nodeType":"185","endLine":51,"endColumn":17,"suggestions":"186"},{"ruleId":"183","severity":1,"message":"187","line":55,"column":6,"nodeType":"185","endLine":55,"endColumn":8,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":62,"column":18,"nodeType":"191","messageId":"192","endLine":62,"endColumn":20},{"ruleId":"183","severity":1,"message":"193","line":67,"column":6,"nodeType":"185","endLine":67,"endColumn":12,"suggestions":"194"},{"ruleId":"189","severity":1,"message":"190","line":128,"column":18,"nodeType":"191","messageId":"192","endLine":128,"endColumn":20},{"ruleId":"189","severity":1,"message":"195","line":130,"column":25,"nodeType":"191","messageId":"192","endLine":130,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":184,"column":18,"nodeType":"191","messageId":"192","endLine":184,"endColumn":20},{"ruleId":"189","severity":1,"message":"190","line":187,"column":25,"nodeType":"191","messageId":"192","endLine":187,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":205,"column":18,"nodeType":"191","messageId":"192","endLine":205,"endColumn":20},{"ruleId":"189","severity":1,"message":"190","line":208,"column":25,"nodeType":"191","messageId":"192","endLine":208,"endColumn":27},{"ruleId":"173","severity":1,"message":"196","line":231,"column":9,"nodeType":"175","messageId":"176","endLine":231,"endColumn":18},{"ruleId":"173","severity":1,"message":"197","line":235,"column":9,"nodeType":"175","messageId":"176","endLine":235,"endColumn":20},{"ruleId":"173","severity":1,"message":"198","line":248,"column":9,"nodeType":"175","messageId":"176","endLine":248,"endColumn":20},{"ruleId":"183","severity":1,"message":"199","line":335,"column":6,"nodeType":"185","endLine":335,"endColumn":24,"suggestions":"200"},{"ruleId":"189","severity":1,"message":"190","line":346,"column":15,"nodeType":"191","messageId":"192","endLine":346,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":351,"column":15,"nodeType":"191","messageId":"192","endLine":351,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":364,"column":27,"nodeType":"191","messageId":"192","endLine":364,"endColumn":29},{"ruleId":"189","severity":1,"message":"190","line":364,"column":59,"nodeType":"191","messageId":"192","endLine":364,"endColumn":61},{"ruleId":"189","severity":1,"message":"190","line":365,"column":27,"nodeType":"191","messageId":"192","endLine":365,"endColumn":29},{"ruleId":"201","severity":1,"message":"202","line":377,"column":9,"nodeType":"203","endLine":377,"endColumn":67},{"ruleId":"201","severity":1,"message":"202","line":383,"column":11,"nodeType":"203","endLine":383,"endColumn":49},{"ruleId":"201","severity":1,"message":"202","line":390,"column":11,"nodeType":"203","endLine":390,"endColumn":49},{"ruleId":"173","severity":1,"message":"204","line":1,"column":34,"nodeType":"175","messageId":"176","endLine":1,"endColumn":55},{"ruleId":"173","severity":1,"message":"205","line":1,"column":57,"nodeType":"175","messageId":"176","endLine":1,"endColumn":69},{"ruleId":"173","severity":1,"message":"206","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"190","line":46,"column":15,"nodeType":"191","messageId":"192","endLine":46,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":56,"column":15,"nodeType":"191","messageId":"192","endLine":56,"endColumn":17},{"ruleId":"183","severity":1,"message":"207","line":18,"column":6,"nodeType":"185","endLine":18,"endColumn":17,"suggestions":"208"},{"ruleId":"183","severity":1,"message":"209","line":47,"column":6,"nodeType":"185","endLine":47,"endColumn":8,"suggestions":"210"},{"ruleId":"183","severity":1,"message":"211","line":41,"column":6,"nodeType":"185","endLine":41,"endColumn":8,"suggestions":"212"},{"ruleId":"189","severity":1,"message":"190","line":46,"column":67,"nodeType":"191","messageId":"192","endLine":46,"endColumn":69},{"ruleId":"189","severity":1,"message":"195","line":49,"column":34,"nodeType":"191","messageId":"192","endLine":49,"endColumn":36},{"ruleId":"183","severity":1,"message":"213","line":53,"column":6,"nodeType":"185","endLine":53,"endColumn":19,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":61,"column":35,"nodeType":"217","messageId":"218","endLine":61,"endColumn":37},{"ruleId":"189","severity":1,"message":"190","line":62,"column":60,"nodeType":"191","messageId":"192","endLine":62,"endColumn":62},{"ruleId":"189","severity":1,"message":"190","line":71,"column":67,"nodeType":"191","messageId":"192","endLine":71,"endColumn":69},{"ruleId":"215","severity":1,"message":"216","line":87,"column":35,"nodeType":"217","messageId":"218","endLine":87,"endColumn":37},{"ruleId":"189","severity":1,"message":"190","line":88,"column":32,"nodeType":"191","messageId":"192","endLine":88,"endColumn":34},{"ruleId":"189","severity":1,"message":"190","line":88,"column":61,"nodeType":"191","messageId":"192","endLine":88,"endColumn":63},{"ruleId":"189","severity":1,"message":"190","line":97,"column":39,"nodeType":"191","messageId":"192","endLine":97,"endColumn":41},{"ruleId":"189","severity":1,"message":"190","line":97,"column":68,"nodeType":"191","messageId":"192","endLine":97,"endColumn":70},{"ruleId":"189","severity":1,"message":"190","line":109,"column":31,"nodeType":"191","messageId":"192","endLine":109,"endColumn":33},{"ruleId":"189","severity":1,"message":"190","line":122,"column":31,"nodeType":"191","messageId":"192","endLine":122,"endColumn":33},{"ruleId":"183","severity":1,"message":"219","line":34,"column":6,"nodeType":"185","endLine":34,"endColumn":22,"suggestions":"220"},{"ruleId":"215","severity":1,"message":"216","line":78,"column":39,"nodeType":"217","messageId":"218","endLine":78,"endColumn":41},{"ruleId":"189","severity":1,"message":"195","line":79,"column":29,"nodeType":"191","messageId":"192","endLine":79,"endColumn":31},{"ruleId":"183","severity":1,"message":"221","line":45,"column":6,"nodeType":"185","endLine":45,"endColumn":8,"suggestions":"222"},{"ruleId":"189","severity":1,"message":"195","line":80,"column":26,"nodeType":"191","messageId":"192","endLine":80,"endColumn":28},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'useLayoutEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentQuestionIndex'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentQuestion' needs the current value of 'currentQuestionIndex'.","ArrayExpression",["225"],"React Hook useEffect has a missing dependency: 'fetchGame'. Either include it or remove the dependency array.",["226"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'count', 'fetchHistoryPlayer1', 'fetchQuestions', and 'userId'. Either include them or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.",["227"],"Expected '!==' and instead saw '!='.","'alertUser' is assigned a value but never used.","'destroyGame' is assigned a value but never used.","'forfeitGame' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'count2', 'gameHistories', and 'movePlayer2'. Either include them or remove the dependency array. You can also do a functional update 'setCount2(c => ...)' if you only need 'count2' in the 'setCount2' call.",["228"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AUTHENTICATION_FAILED' is defined but never used.","'LOAD_ACCOUNT' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'reset' and 'start'. Either include them or remove the dependency array.",["229"],"React Hook useEffect has a missing dependency: 'fetchPossibleOpponents'. Either include it or remove the dependency array.",["230"],"React Hook useEffect has missing dependencies: 'fetchGamesPlayed' and 'fetchGamesToPlay'. Either include them or remove the dependency array.",["231"],"React Hook useEffect has missing dependencies: 'gamesPlayedStats' and 'userId'. Either include them or remove the dependency array.",["232"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'questionArray'. Either include it or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'getOpponentInfos'. Either include it or remove the dependency array.",["234"],"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [currentQuestionIndex, questions]",{"range":"255","text":"256"},"Update the dependencies array to be: [fetchGame]",{"range":"257","text":"258"},"Update the dependencies array to be: [count, fetchHistoryPlayer1, fetchQuestions, game, userId]",{"range":"259","text":"260"},"Update the dependencies array to be: [count2, firstGameHistory, gameHistories, movePlayer2]",{"range":"261","text":"262"},"Update the dependencies array to be: [reset, resetTick, start]",{"range":"263","text":"264"},"Update the dependencies array to be: [fetchPossibleOpponents]",{"range":"265","text":"266"},"Update the dependencies array to be: [fetchGamesPlayed, fetchGamesToPlay]",{"range":"267","text":"268"},"Update the dependencies array to be: [gamesPlayed, gamesPlayedStats, userId]",{"range":"269","text":"270"},"Update the dependencies array to be: [correct_answer, questionArray]",{"range":"271","text":"272"},"Update the dependencies array to be: [getOpponentInfos]",{"range":"273","text":"274"},[1934,1945],"[currentQuestionIndex, questions]",[1991,1993],"[fetchGame]",[2221,2227],"[count, fetchHistoryPlayer1, fetchQuestions, game, userId]",[9541,9559],"[count2, firstGameHistory, gameHistories, movePlayer2]",[390,401],"[reset, resetTick, start]",[1023,1025],"[fetchPossibleOpponents]",[1306,1308],"[fetchGamesPlayed, fetchGamesToPlay]",[1671,1684],"[gamesPlayed, gamesPlayedStats, userId]",[767,783],"[correct_answer, questionArray]",[965,967],"[getOpponentInfos]"]