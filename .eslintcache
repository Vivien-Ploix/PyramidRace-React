[{"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/index.jsx":"1","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/redux/store.js":"2","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Components/Footer/index.jsx":"3","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/redux/authentication/authReducer.js":"4","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GameInfos/index.jsx":"5","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/Home/index.jsx":"6","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Components/NavBar/index.jsx":"7","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/Login/index.jsx":"8","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/Signup/index.jsx":"9","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GamePage/index.jsx":"10","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/redux/authentication/authTypes.js":"11","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/redux/authentication/authActions.js":"12","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GamePage/QuestionCard/index.jsx":"13","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/Home/HomeSection/index.jsx":"14","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/Home/Jumbotron/index.jsx":"15","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GameInfos/GamePlayedList/index.jsx":"16","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GameInfos/GamePlayedList/GamePlayed/index.jsx":"17","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GameInfos/PlayerInfos/index.jsx":"18","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GameInfos/JumbotronGameInfos/index.jsx":"19","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GameInfos/SearchBar/index.jsx":"20","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GameInfos/SearchBar/PlayerSuggestion/index.jsx":"21","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GamePage/Countdown/index.jsx":"22"},{"size":1432,"mtime":1607935820575,"results":"23","hashOfConfig":"24"},{"size":557,"mtime":1607529854778,"results":"25","hashOfConfig":"24"},{"size":631,"mtime":1607935820431,"results":"26","hashOfConfig":"24"},{"size":710,"mtime":1607526791796,"results":"27","hashOfConfig":"24"},{"size":315,"mtime":1607943625953,"results":"28","hashOfConfig":"24"},{"size":245,"mtime":1607943513336,"results":"29","hashOfConfig":"24"},{"size":4508,"mtime":1607935820499,"results":"30","hashOfConfig":"24"},{"size":3842,"mtime":1607935820561,"results":"31","hashOfConfig":"24"},{"size":4376,"mtime":1607935820569,"results":"32","hashOfConfig":"24"},{"size":3459,"mtime":1607961473713,"results":"33","hashOfConfig":"24"},{"size":205,"mtime":1607524946570,"results":"34","hashOfConfig":"24"},{"size":375,"mtime":1607526791794,"results":"35","hashOfConfig":"24"},{"size":1438,"mtime":1607962980142,"results":"36","hashOfConfig":"24"},{"size":3826,"mtime":1607935820477,"results":"37","hashOfConfig":"24"},{"size":3567,"mtime":1607935820485,"results":"38","hashOfConfig":"24"},{"size":2215,"mtime":1607943449484,"results":"39","hashOfConfig":"24"},{"size":1962,"mtime":1607935820455,"results":"40","hashOfConfig":"24"},{"size":795,"mtime":1607959855464,"results":"41","hashOfConfig":"24"},{"size":1426,"mtime":1607935820494,"results":"42","hashOfConfig":"24"},{"size":2770,"mtime":1607943530056,"results":"43","hashOfConfig":"24"},{"size":276,"mtime":1607935820521,"results":"44","hashOfConfig":"24"},{"size":509,"mtime":1607963038415,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1ceizi",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/index.jsx",[],["97","98"],"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/redux/store.js",[],"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Components/Footer/index.jsx",[],"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/redux/authentication/authReducer.js",[],"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GameInfos/index.jsx",[],"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/Home/index.jsx",[],"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Components/NavBar/index.jsx",["99","100","101","102","103","104"],"import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logoutSuccess } from \"../../redux/authentication/authActions\";\r\n\r\nconst NavBar = () => {\r\n  const tokenCookie = Cookies.get(\"token\");\r\n  const isLoggedIn = useSelector((state) => state.isLoggedIn);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickLogout = () => {\r\n    fetch(\"https://pyramid-race-api.herokuapp.com/logout\", {\r\n      method: \"delete\",\r\n      Bearer: {\r\n        token: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(Cookies.get(\"token\"));\r\n        Cookies.remove(\"token\");\r\n        dispatch(logoutSuccess());\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"isLoggedIn changed\");\r\n  }, [isLoggedIn]);\r\n\r\n  return (\r\n    <div className=\"navgition navgition-transparent\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <nav className=\"navbar navbar-expand-lg\">\r\n              <Link to=\"/\">\r\n                <img src=\"/assets/images/logo.svg\" alt=\"Logo\"></img>\r\n              </Link>\r\n              <button\r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbarOne\"\r\n                aria-controls=\"navbarOne\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n              >\r\n                <span className=\"toggler-icon\"></span>\r\n                <span className=\"toggler-icon\"></span>\r\n                <span className=\"toggler-icon\"></span>\r\n              </button>\r\n              <div\r\n                className=\"collapse navbar-collapse sub-menu-bar\"\r\n                id=\"navbarOne\"\r\n              >\r\n                <ul className=\"navbar-nav m-auto\">\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/\">Accueil</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"page-scroll\" href=\"/#information\">\r\n                      Informations\r\n                    </a>\r\n                  </li>\r\n                  {tokenCookie && (\r\n                    <>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/gameinfos\">Profil</Link>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/\" onClick={handleClickLogout}>\r\n                          Se déconnecter\r\n                        </Link>\r\n                      </li>\r\n                    </>\r\n                  )}\r\n                  {!tokenCookie && (\r\n                    <>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/sign-up\">S'inscrire</Link>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/login\">Se connecter</Link>\r\n                      </li>\r\n                    </>\r\n                  )}\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"navbar-social d-none d-sm-flex align-items-center\">\r\n                <span>NOS RESEAUX</span>\r\n                <ul>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://www.facebook.com/PyramidRace\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"lni-facebook-filled\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"https://twitter.com/RacePyramid\" target=\"_blank\">\r\n                      {\" \"}\r\n                      <i className=\"lni-twitter-original\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://www.instagram.com/pyramid.race/\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"lni-instagram-original\"></i>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/Login/index.jsx",[],"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/Signup/index.jsx",[],"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GamePage/index.jsx",["105","106","107","108","109"],"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/redux/authentication/authTypes.js",[],"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/redux/authentication/authActions.js",["110","111"],"import { AUTHENTICATION_SUCCESS, AUTHENTICATION_FAILED, LOAD_ACCOUNT, LOGOUT_SUCCESS } from './authTypes';\n\nexport const authSuccess = (response) => {\n    return {\n        type: AUTHENTICATION_SUCCESS,\n        id: response.data.id,\n        attributes: response.data.attributes,\n    };\n};\n\nexport const logoutSuccess = () => {\n    return {\n        type: LOGOUT_SUCCESS\n    }\n}","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GamePage/QuestionCard/index.jsx",[],"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/Home/HomeSection/index.jsx",[],"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/Home/Jumbotron/index.jsx",["112"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Cookie from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Jumbotron = () => {\r\n  const userId = useSelector((state) => state.id);\r\n  const tokenCookie = Cookie.get(\"token\");\r\n  const history = useHistory();\r\n  const [possibleOpponents, setPossibleOpponents] = useState([]);\r\n  const categoriesArray = [\r\n    9,\r\n    10,\r\n    11,\r\n    12,\r\n    14,\r\n    15,\r\n    16,\r\n    17,\r\n    18,\r\n    19,\r\n    21,\r\n    22,\r\n    23,\r\n    24,\r\n    26,\r\n    27,\r\n    28,\r\n    31,\r\n    32,\r\n  ];\r\n\r\n  const fetchPossibleOpponents = () => {\r\n    fetch(`https://pyramid-race-api.herokuapp.com/users`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setPossibleOpponents(\r\n          data.filter((user) => user.id !== parseInt(userId))\r\n        );\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPossibleOpponents();\r\n  }, []);\r\n\r\n  const startGame = () => {\r\n    const data = {\r\n      game: {\r\n        player1_id: userId,\r\n        player2_id:\r\n          possibleOpponents[\r\n            Math.floor(Math.random() * possibleOpponents.length)\r\n          ].id,\r\n        difficulty: \"medium\",\r\n        category:\r\n          categoriesArray[Math.floor(Math.random() * categoriesArray.length)],\r\n      },\r\n    };\r\n\r\n    fetch(`https://pyramid-race-api.herokuapp.com/games`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Authorization: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        history.push(`/game/${response.id}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"home\"\r\n      className=\"header-hero bg_cover\"\r\n      style={{ backgroundImage: `url(${\"assets/images/header-bg.jpg\"})` }}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xl-8 col-lg-10\">\r\n            <div className=\"header-content text-center\">\r\n              <h3 className=\"header-title\">\r\n                Bienvenue sur Pyramid <em>Race</em> !\r\n              </h3>\r\n              <h2>Confronte ta culture générale avec d'autres joueurs !</h2>\r\n              <p className=\"text\">\r\n                Prouve que tu es le meilleur en atteignant le haut de la\r\n                pyramide ou tu erreras dans ses labyrinthes jusqu'à ce que tu te\r\n                transformes en burrito avarié !\r\n              </p>\r\n              <ul className=\"header-btn\">\r\n                {userId === null && (\r\n                  <li>\r\n                    <Link to=\"/sign-up\" className=\"main-btn btn-one\">\r\n                      Je veux jouer\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n                {userId !== null && (\r\n                  <li>\r\n                    <Link\r\n                      to=\"/\"\r\n                      className=\"main-btn btn-one\"\r\n                      onClick={startGame}\r\n                    >\r\n                      Je veux jouer\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-shape\">\r\n        <img src=\"assets/images/header-shape.svg\" alt=\"shape\"></img>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jumbotron;\r\n","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GameInfos/GamePlayedList/index.jsx",["113","114","115","116","117"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport GamePlayed from \"./GamePlayed\";\nimport PlayerInfos from \"./../PlayerInfos\";\nimport \"./style.scss\";\n\nconst GamePlayedList = () => {\n  const userId = useSelector((state) => state.id);\n  const [gamesPlayed, setGamesPlayed] = useState([]);\n  const [playerStats, setPlayerStats] = useState({});\n  const [gamesPlayedStats, setGamesPlayedStats] = useState([]);\n\n  const fetchGamesPlayed = () => {\n    fetch(`https://pyramid-race-api.herokuapp.com/users/${userId}/games`)\n      .then((response) => response.json())\n      .then((data) => {\n        setGamesPlayedStats(data);\n        let slicedData = data.slice(0, 10);\n        setGamesPlayed(slicedData);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    fetchGamesPlayed();\n  }, []);\n\n  useEffect(() => {\n    let player_stats = {\n      games_played: gamesPlayedStats.length,\n      games_won: gamesPlayedStats.filter((game) => game.winner_id == userId)\n        .length,\n      games_lost: gamesPlayedStats.filter(\n        (game) => game.winner_id != userId && game.winner_id != null\n      ).length,\n    };\n    setPlayerStats(player_stats);\n  }, [gamesPlayed]);\n\n  return (\n    <div className=\"GameInfoContainer\">\n      <div className=\"game-info-column col-lg-8\">\n        <div className=\"list-container\">\n          {gamesPlayed.map((game) => {\n            if (game.player1_id == userId) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player2_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player1_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            }\n          })}\n        </div>\n      </div>\n      <div className=\"game-info-column col-lg-3 player-infos-col\">\n        <PlayerInfos player_stats={playerStats} />\n      </div>\n    </div>\n  );\n};\n\nexport default GamePlayedList;\n","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GameInfos/GamePlayedList/GamePlayed/index.jsx",["118","119","120"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./style.scss\";\r\n\r\nconst GamePlayed = ({ opponentId, winner_id }) => {\r\n  const [opponent, setOpponent] = useState({});\r\n  const getOpponentInfos = () => {\r\n    fetch(`https://pyramid-race-api.herokuapp.com/users/${opponentId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setOpponent(data);\r\n      })\r\n      .catch((error) => alert(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOpponentInfos();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container card-game\">\r\n      <div className=\"row align-middle\">\r\n        <div className=\"col-md-8 col-lg-6 column\">\r\n          <div className=\"card gr-1\">\r\n            <div className=\"txt\">\r\n              {winner_id != opponentId && winner_id != null && (\r\n                <div>\r\n                  <h1>Victoire</h1>\r\n                  <p>\r\n                    Tu es le grand gagnant de cette partie ! ( calme toi quand\r\n                    meme)\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {winner_id === opponentId && (\r\n                <div>\r\n                  <h1>Défaite</h1>\r\n                  <p>\r\n                    Tu as perdu...Que tes os reposent au bas de la pyramide pour\r\n                    que de son sommet nous te regardions avec honte et mépris\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {winner_id === null && (\r\n                <div>\r\n                  <h1>En cours</h1>\r\n                  <p>La partie n'est pas encore terminée ! Quel suspens !</p>\r\n                </div>\r\n              )}\r\n\r\n              <small>Adversaire : {opponent.pseudo}</small>\r\n            </div>\r\n            <a href=\"#\">Rejouer ?</a>\r\n            <div className=\"ico-card\">\r\n              <i className=\"lni lni-pyramids\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePlayed;\r\n","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GameInfos/PlayerInfos/index.jsx",[],"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GameInfos/JumbotronGameInfos/index.jsx",[],"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GameInfos/SearchBar/index.jsx",["121","122"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./style.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Cookie from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PlayerSuggestion from \"./PlayerSuggestion\";\r\n\r\nconst SearchBar = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const userId = useSelector((state) => state.id);\r\n  const tokenCookie = Cookie.get(\"token\");\r\n  const history = useHistory();\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  //Enables selecting the range of categories in the API and excluding the ones not containing enough questions\r\n  const arrayQuestions = [...Array(32 - 9 + 1)].map((item, index) => 9 + index);\r\n  const categoriesToBeRemoved = [13, 20, 25, 29, 30];\r\n  const categoriesArray = arrayQuestions.filter(\r\n    (item) => !categoriesToBeRemoved.includes(item)\r\n  );\r\n\r\n  const handleInputChange = (e) => {\r\n    const { value } = e.currentTarget;\r\n    setInput(value.replace(/\\s/, \"\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (input.length >= 3) {\r\n      fetch(`https://pyramid-race-api.herokuapp.com/users?pseudo=${input}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setSuggestions(data || []);\r\n        });\r\n    } else {\r\n      setSuggestions([]);\r\n    }\r\n  }, [input]);\r\n\r\n  const closeSearch = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const startGame = (opponentId) => {\r\n    const data = {\r\n      game: {\r\n        player1_id: userId,\r\n        player2_id: opponentId,\r\n        difficulty: \"medium\",\r\n        category:\r\n          categoriesArray[Math.floor(Math.random() * categoriesArray.length)],\r\n      },\r\n    };\r\n\r\n    fetch(`https://pyramid-race-api.herokuapp.com/games`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Authorization: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        history.push(`/game/${response.id}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container searchbar navbar-form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Chercher un joueur\"\r\n        onChange={handleInputChange}\r\n        value={input}\r\n      />\r\n      <div className=\"search\" onClick={closeSearch}></div>\r\n      <div className=\"suggestions\">\r\n        {suggestions.map((suggestion) => {\r\n          if (suggestion.id != userId) {\r\n            return (\r\n              <PlayerSuggestion\r\n                pseudo={suggestion.pseudo}\r\n                onClick={() => {\r\n                  startGame(suggestion.id);\r\n                }}\r\n              />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GameInfos/SearchBar/PlayerSuggestion/index.jsx",[],"/mnt/c/Users/Yoni/Desktop/THP NEXT PROJECT/PyramidRaceReact/pyramidrace/src/Pages/GamePage/Countdown/index.jsx",["123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":2,"column":27,"nodeType":"130","messageId":"131","endLine":2,"endColumn":33},{"ruleId":"128","severity":1,"message":"132","line":2,"column":35,"nodeType":"130","messageId":"131","endLine":2,"endColumn":40},{"ruleId":"128","severity":1,"message":"133","line":2,"column":42,"nodeType":"130","messageId":"131","endLine":2,"endColumn":48},{"ruleId":"134","severity":1,"message":"135","line":99,"column":23,"nodeType":"136","endLine":99,"endColumn":38},{"ruleId":"134","severity":1,"message":"135","line":106,"column":63,"nodeType":"136","endLine":106,"endColumn":78},{"ruleId":"134","severity":1,"message":"135","line":114,"column":23,"nodeType":"136","endLine":114,"endColumn":38},{"ruleId":"128","severity":1,"message":"137","line":20,"column":10,"nodeType":"130","messageId":"131","endLine":20,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":31,"column":6,"nodeType":"140","endLine":31,"endColumn":17,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"142","line":35,"column":6,"nodeType":"140","endLine":35,"endColumn":8,"suggestions":"143"},{"ruleId":"138","severity":1,"message":"144","line":46,"column":6,"nodeType":"140","endLine":46,"endColumn":12,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":109,"column":9,"nodeType":"148","endLine":109,"endColumn":50},{"ruleId":"128","severity":1,"message":"149","line":1,"column":34,"nodeType":"130","messageId":"131","endLine":1,"endColumn":55},{"ruleId":"128","severity":1,"message":"150","line":1,"column":57,"nodeType":"130","messageId":"131","endLine":1,"endColumn":69},{"ruleId":"138","severity":1,"message":"151","line":47,"column":6,"nodeType":"140","endLine":47,"endColumn":8,"suggestions":"152"},{"ruleId":"138","severity":1,"message":"153","line":26,"column":6,"nodeType":"140","endLine":26,"endColumn":8,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":31,"column":67,"nodeType":"157","messageId":"158","endLine":31,"endColumn":69},{"ruleId":"155","severity":1,"message":"159","line":34,"column":34,"nodeType":"157","messageId":"158","endLine":34,"endColumn":36},{"ruleId":"138","severity":1,"message":"160","line":38,"column":6,"nodeType":"140","endLine":38,"endColumn":19,"suggestions":"161"},{"ruleId":"155","severity":1,"message":"156","line":45,"column":33,"nodeType":"157","messageId":"158","endLine":45,"endColumn":35},{"ruleId":"138","severity":1,"message":"162","line":17,"column":6,"nodeType":"140","endLine":17,"endColumn":8,"suggestions":"163"},{"ruleId":"155","severity":1,"message":"159","line":25,"column":26,"nodeType":"157","messageId":"158","endLine":25,"endColumn":28},{"ruleId":"164","severity":1,"message":"165","line":52,"column":13,"nodeType":"148","endLine":52,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":78,"column":39,"nodeType":"168","messageId":"169","endLine":78,"endColumn":41},{"ruleId":"155","severity":1,"message":"159","line":79,"column":29,"nodeType":"157","messageId":"158","endLine":79,"endColumn":31},{"ruleId":"138","severity":1,"message":"170","line":18,"column":6,"nodeType":"140","endLine":18,"endColumn":17,"suggestions":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'counter' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentQuestion' and 'currentQuestionIndex'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentQuestion' needs the current value of 'currentQuestionIndex'.","ArrayExpression",["174"],"React Hook useEffect has a missing dependency: 'fetchGame'. Either include it or remove the dependency array.",["175"],"React Hook useEffect has missing dependencies: 'count' and 'fetchQuestions'. Either include them or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.",["176"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AUTHENTICATION_FAILED' is defined but never used.","'LOAD_ACCOUNT' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchPossibleOpponents'. Either include it or remove the dependency array.",["177"],"React Hook useEffect has a missing dependency: 'fetchGamesPlayed'. Either include it or remove the dependency array.",["178"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'gamesPlayedStats' and 'userId'. Either include them or remove the dependency array.",["179"],"React Hook useEffect has a missing dependency: 'getOpponentInfos'. Either include it or remove the dependency array.",["180"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'reset' and 'start'. Either include them or remove the dependency array.",["181"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [currentQuestion, currentQuestionIndex, questions]",{"range":"198","text":"199"},"Update the dependencies array to be: [fetchGame]",{"range":"200","text":"201"},"Update the dependencies array to be: [count, fetchQuestions, game]",{"range":"202","text":"203"},"Update the dependencies array to be: [fetchPossibleOpponents]",{"range":"204","text":"205"},"Update the dependencies array to be: [fetchGamesPlayed]",{"range":"206","text":"207"},"Update the dependencies array to be: [gamesPlayed, gamesPlayedStats, userId]",{"range":"208","text":"209"},"Update the dependencies array to be: [getOpponentInfos]",{"range":"210","text":"211"},"Update the dependencies array to be: [reset, resetTick, start]",{"range":"212","text":"213"},[1175,1186],"[currentQuestion, currentQuestionIndex, questions]",[1232,1234],"[fetchGame]",[1419,1425],"[count, fetchQuestions, game]",[1049,1051],"[fetchPossibleOpponents]",[857,859],"[fetchGamesPlayed]",[1221,1234],"[gamesPlayed, gamesPlayedStats, userId]",[496,498],"[getOpponentInfos]",[385,396],"[reset, resetTick, start]"]