[{"/home/vivien/next/projet_final/PyramidRace-React/src/index.jsx":"1","/home/vivien/next/projet_final/PyramidRace-React/src/Components/Footer/index.jsx":"2","/home/vivien/next/projet_final/PyramidRace-React/src/Components/NavBar/index.jsx":"3","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/index.jsx":"4","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/index.jsx":"5","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Login/index.jsx":"6","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Signup/index.jsx":"7","/home/vivien/next/projet_final/PyramidRace-React/src/Components/Jumbotron/index.jsx":"8","/home/vivien/next/projet_final/PyramidRace-React/src/Components/GamePlayed/index.jsx":"9","/home/vivien/next/projet_final/PyramidRace-React/src/Components/HomeSection/index.jsx":"10","/home/vivien/next/projet_final/PyramidRace-React/src/Components/JumbotronGameInfos/index.jsx":"11","/home/vivien/next/projet_final/PyramidRace-React/src/Components/SearchBar/index.jsx":"12","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authActions.js":"13","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authTypes.js":"14","/home/vivien/next/projet_final/PyramidRace-React/src/redux/store.js":"15","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authReducer.js":"16"},{"size":1308,"mtime":1607522325063,"results":"17","hashOfConfig":"18"},{"size":579,"mtime":1607505064144,"results":"19","hashOfConfig":"18"},{"size":4191,"mtime":1607524842890,"results":"20","hashOfConfig":"18"},{"size":317,"mtime":1607505064173,"results":"21","hashOfConfig":"18"},{"size":275,"mtime":1607505064177,"results":"22","hashOfConfig":"18"},{"size":3535,"mtime":1607522325046,"results":"23","hashOfConfig":"18"},{"size":4174,"mtime":1607522325054,"results":"24","hashOfConfig":"18"},{"size":1386,"mtime":1607505064156,"results":"25","hashOfConfig":"18"},{"size":633,"mtime":1607505064147,"results":"26","hashOfConfig":"18"},{"size":3566,"mtime":1607505064154,"results":"27","hashOfConfig":"18"},{"size":1268,"mtime":1607505064160,"results":"28","hashOfConfig":"18"},{"size":284,"mtime":1607505064167,"results":"29","hashOfConfig":"18"},{"size":375,"mtime":1607524244688,"results":"30","hashOfConfig":"18"},{"size":205,"mtime":1607522325087,"results":"31","hashOfConfig":"18"},{"size":633,"mtime":1607522325092,"results":"32","hashOfConfig":"18"},{"size":710,"mtime":1607524234587,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1ukoblb",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/home/vivien/next/projet_final/PyramidRace-React/src/index.jsx",["73"],"import React, {useEffect} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport NavBar from \"./Components/NavBar\";\r\nimport Home from \"./Pages/Home\";\r\nimport Footer from \"./Components/Footer/\";\r\nimport Login from \"./Pages/Login\";\r\nimport SignUp from \"./Pages/Signup\";\r\nimport GameInfos from \"./Pages/GameInfos\"\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from './redux/store'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <div>\r\n          <Router>\r\n            <NavBar />\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Home />\r\n              </Route>\r\n              <Route path=\"/login\">\r\n                <Login />\r\n              </Route>\r\n              <Route path=\"/sign-up\">\r\n                <SignUp />\r\n              </Route>\r\n              <Route path=\"/gameInfos\">\r\n                <GameInfos />\r\n              </Route>\r\n            </Switch>\r\n            <Footer />\r\n          </Router>\r\n        </div>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n",["74","75"],"/home/vivien/next/projet_final/PyramidRace-React/src/Components/Footer/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Components/NavBar/index.jsx",["76","77","78","79","80","81","82","83"],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Login/index.jsx",["84"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from 'js-cookie'\r\nimport { authSuccess } from '../../redux/authentication/authActions'\r\nimport {useDispatch} from \"react-redux\"\r\n\r\nconst Login = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClickLogin = (e) => {\r\n    e.preventDefault()\r\n    let data = {\r\n      user: {\r\n        email: e.currentTarget.email.value,\r\n        password: e.currentTarget.password.value\r\n      }\r\n    }\r\n    fetch('https://pyramid-race-api.herokuapp.com/login', {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n    .then((response) => {\r\n      for (var pair of response.headers.entries()) { // accessing the entries\r\n        if (pair[0] === \"authorization\") { // key I'm looking for in this instance\r\n        Cookies.set(\"token\", pair[1])\r\n        }\r\n      }\r\n      return response.json()\r\n    })\r\n    .then((response) => {\r\n      dispatch(authSuccess(response))\r\n      history.push('/')\r\n    })\r\n    .catch((error) => console.log(error))\r\n  }\r\n  return (\r\n    <div>\r\n      <section\r\n        id=\"contact\"\r\n        class=\"contact-area\"\r\n        style={{ marginBottom: \"50px\", marginTop: \"50px\" }}\r\n      >\r\n        <div class=\"container\">\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"section-title text-center pb-10\">\r\n                <h3 class=\"title\">Se connecter</h3>\r\n                <p class=\"text\">\r\n                  Avant de monter la pyramide il faut décliner ton identité ! Il\r\n                  serait regretable que ton nom n'entre pas dans l'histoire ...\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-lg-8\">\r\n              <div class=\"contact-form\">\r\n                <form id=\"contact-form\" method=\"post\" onSubmit={handleClickLogin}>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"single-form form-group\">\r\n                        <input\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"Tape ton adresse mail (pas trop fort)\"\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"single-form form-group\">\r\n                        <input\r\n                          placeholder=\"Tape ton mot de passe (idem)\"\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"single-form form-group text-center\">\r\n                        <button type=\"submit\" class=\"main-btn\">\r\n                          Me connecter\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <img\r\n                      src=\"/assets/images/aztequelog.png\"\r\n                      style={{ marginTop: \"100px\" }}\r\n                    ></img>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Signup/index.jsx",["85","86"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from 'js-cookie'\r\nimport { authSuccess } from '../../redux/authentication/authActions'\r\nimport {useDispatch} from \"react-redux\"\r\n\r\n\r\nconst SignUp = () => {\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  var myForm = document.getElementById('signup-form')\r\n\r\n  const handleClickSignup = (e) => {\r\n    e.preventDefault();\r\n\r\n    let data = {\r\n      user: {\r\n        email: e.currentTarget.email.value,\r\n        pseudo:  e.currentTarget.pseudo.value,\r\n        password: e.currentTarget.password.value\r\n      }\r\n    }\r\n    fetch('https://pyramid-race-api.herokuapp.com/signup', {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n    .then((response) => {\r\n      for (var pair of response.headers.entries()) { // accessing the entries\r\n        if (pair[0] === \"authorization\") { // key I'm looking for in this instance\r\n        Cookies.set(\"token\", pair[1])\r\n        }\r\n      }\r\n      return response.json()\r\n    })\r\n    .then((response) => {\r\n      dispatch(authSuccess(response))\r\n      history.push('/')\r\n    })\r\n    .catch((error) => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <section\r\n        id=\"contact\"\r\n        class=\"contact-area\"\r\n        style={{ marginBottom: \"50px\", marginTop: \"50px\" }}\r\n      >\r\n        <div class=\"container\">\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"section-title text-center pb-10\">\r\n                <h3 class=\"title\">Inscription</h3>\r\n                <p class=\"text\">\r\n                  Tu es brave et courageux, si tu es ici c'est que tu veux\r\n                  tenter l'aventure et atteindre le sommet de la Pyramid Race !\r\n                </p>\r\n                <small>\r\n                  Tu vas surement mourir mais bravo pour ton courage 😏\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row justify-content-center\">\r\n            <div class=\"col-lg-8\">\r\n              <div class=\"contact-form\">\r\n                <form id=\"signup-form\" method=\"post\" onSubmit={handleClickSignup}>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"single-form form-group\">\r\n                        <input\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          placeholder=\"Tape ton adresse mail\"\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"single-form form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"pseudo\"\r\n                          placeholder=\"Tape ton pseudo (Choisi un truc qui en jette sinon on te jette (de la pyramide...)\"\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"single-form form-group\">\r\n                        <input\r\n                          placeholder=\"Tape ton mot de passe\"\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"single-form form-group text-center\">\r\n                        <button type=\"submit\" class=\"main-btn\">\r\n                          M'inscrire\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <img\r\n                      src=\"/assets/images/aztequesign.png\"\r\n                      style={{ marginTop: \"50px\" }}\r\n                    ></img>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Components/Jumbotron/index.jsx",["87","88","89"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\nconst Jumbotron = () => {\r\n  return (\r\n    <div\r\n      id=\"home\"\r\n      className=\"header-hero bg_cover\"\r\n      style={{ backgroundImage: `url(${\"assets/images/header-bg.jpg\"})` }}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xl-8 col-lg-10\">\r\n            <div className=\"header-content text-center\">\r\n              <h3 className=\"header-title\">Bienvenue sur Pyramid Race !</h3>\r\n              <h2>Confronte ta culture générale avec d'autres joueurs !</h2>\r\n              <p className=\"text\">\r\n                Prouve que tu es le meilleur en atteignant le haut de la\r\n                pyramide ou tu erreras dans ses labyrinthe jusqu'à ce que tu te\r\n                transforme en momie\r\n              </p>\r\n              <ul className=\"header-btn\">\r\n                <li>\r\n                  <Link to=\"/sign-up\" className=\"main-btn btn-one\">\r\n                    Je veux jouer !\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-shape\">\r\n        <img src=\"assets/images/header-shape.svg\" alt=\"shape\"></img>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jumbotron;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Components/GamePlayed/index.jsx",["90"],"import React from \"react\";\r\nimport './style.scss'\r\n\r\nconst GamePlayed = () => {\r\n  return (\r\n\r\n\r\n<div class=\"container h-100\">\r\n  <div class=\"row align-middle\">\r\n    <div class=\"col-md-6 col-lg-4 column\">\r\n      <div class=\"card gr-1\">\r\n        <div class=\"txt\">\r\n          <h1>Défaite</h1>\r\n          <p>Vous avez atteint l'étage 3 de la pyramide</p>\r\n          <small>Adversaire : Jean</small>\r\n        </div>\r\n        <a href=\"#\">Rejouer</a>\r\n        <div class=\"ico-card\">\r\n        <i class=\"lni lni-pyramids\"></i>\r\n      </div>\r\n      </div>\r\n    </div>\r\n   \r\n    \r\n  </div>\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nexport default GamePlayed;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Components/HomeSection/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Components/JumbotronGameInfos/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Components/SearchBar/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authActions.js",["91","92"],"import { AUTHENTICATION_SUCCESS, AUTHENTICATION_FAILED, LOAD_ACCOUNT, LOGOUT_SUCCESS } from './authTypes';\n\nexport const authSuccess = (response) => {\n    return {\n        type: AUTHENTICATION_SUCCESS,\n        id: response.data.id,\n        attributes: response.data.attributes,\n    };\n};\n\nexport const logoutSuccess = () => {\n    return {\n        type: LOGOUT_SUCCESS\n    }\n}","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authTypes.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/store.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authReducer.js",[],{"ruleId":"93","severity":1,"message":"94","line":1,"column":16,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"93","severity":1,"message":"101","line":2,"column":27,"nodeType":"95","messageId":"96","endLine":2,"endColumn":33},{"ruleId":"93","severity":1,"message":"102","line":2,"column":35,"nodeType":"95","messageId":"96","endLine":2,"endColumn":40},{"ruleId":"93","severity":1,"message":"103","line":2,"column":42,"nodeType":"95","messageId":"96","endLine":2,"endColumn":48},{"ruleId":"93","severity":1,"message":"104","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":20},{"ruleId":"105","severity":1,"message":"106","line":94,"column":56,"nodeType":"107","endLine":94,"endColumn":71},{"ruleId":"108","severity":1,"message":"109","line":100,"column":21,"nodeType":"110","endLine":100,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":106,"column":21,"nodeType":"110","endLine":106,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":112,"column":21,"nodeType":"110","endLine":112,"endColumn":49},{"ruleId":"111","severity":1,"message":"112","line":92,"column":21,"nodeType":"110","endLine":95,"endColumn":22},{"ruleId":"93","severity":1,"message":"113","line":12,"column":7,"nodeType":"95","messageId":"96","endLine":12,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":109,"column":21,"nodeType":"110","endLine":112,"endColumn":22},{"ruleId":"93","severity":1,"message":"101","line":2,"column":27,"nodeType":"95","messageId":"96","endLine":2,"endColumn":33},{"ruleId":"93","severity":1,"message":"102","line":2,"column":35,"nodeType":"95","messageId":"96","endLine":2,"endColumn":40},{"ruleId":"93","severity":1,"message":"103","line":2,"column":42,"nodeType":"95","messageId":"96","endLine":2,"endColumn":48},{"ruleId":"108","severity":1,"message":"109","line":17,"column":9,"nodeType":"110","endLine":17,"endColumn":21},{"ruleId":"93","severity":1,"message":"114","line":1,"column":34,"nodeType":"95","messageId":"96","endLine":1,"endColumn":55},{"ruleId":"93","severity":1,"message":"115","line":1,"column":57,"nodeType":"95","messageId":"96","endLine":1,"endColumn":69},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["116"],"no-negated-in-lhs",["117"],"'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'useHistory' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'myForm' is assigned a value but never used.","'AUTHENTICATION_FAILED' is defined but never used.","'LOAD_ACCOUNT' is defined but never used.","no-global-assign","no-unsafe-negation"]
