[{"/home/vivien/next/projet_final/PyramidRace-React/src/index.jsx":"1","/home/vivien/next/projet_final/PyramidRace-React/src/redux/store.js":"2","/home/vivien/next/projet_final/PyramidRace-React/src/Components/Footer/index.jsx":"3","/home/vivien/next/projet_final/PyramidRace-React/src/Components/NavBar/index.jsx":"4","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/index.jsx":"5","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Signup/index.jsx":"6","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Login/index.jsx":"7","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/404/index.jsx":"8","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Victory/index.jsx":"9","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Team/index.jsx":"10","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Defeat/index.jsx":"11","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/index.jsx":"12","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/index.jsx":"13","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authReducer.js":"14","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authActions.js":"15","/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authTypes.js":"16","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Modal/index.jsx":"17","/home/vivien/next/projet_final/PyramidRace-React/src/Components/Fetch/index.jsx":"18","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Countdown/index.jsx":"19","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/QuestionCard/index.jsx":"20","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/JumbotronGameInfos/index.jsx":"21","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/Jumbotron/index.jsx":"22","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/index.jsx":"23","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/HomeSection/index.jsx":"24","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Team/components/TeamCards/index.jsx":"25","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Team/components/Jumbotron/index.jsx":"26","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/index.jsx":"27","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/PlayerInfos/index.jsx":"28","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/GamePlayed/index.jsx":"29","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/PlayerInfos/ProgressBar/index.jsx":"30","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/PlayerSuggestion/index.jsx":"31"},{"size":1953,"mtime":1608239601572,"results":"32","hashOfConfig":"33"},{"size":557,"mtime":1608239365419,"results":"34","hashOfConfig":"33"},{"size":709,"mtime":1608239365271,"results":"35","hashOfConfig":"33"},{"size":4508,"mtime":1608239365277,"results":"36","hashOfConfig":"33"},{"size":12721,"mtime":1608245406975,"results":"37","hashOfConfig":"33"},{"size":4344,"mtime":1608239601557,"results":"38","hashOfConfig":"33"},{"size":3776,"mtime":1608239601553,"results":"39","hashOfConfig":"33"},{"size":231,"mtime":1608239601494,"results":"40","hashOfConfig":"33"},{"size":135,"mtime":1608239601568,"results":"41","hashOfConfig":"33"},{"size":254,"mtime":1608239365401,"results":"42","hashOfConfig":"33"},{"size":567,"mtime":1608239601508,"results":"43","hashOfConfig":"33"},{"size":315,"mtime":1608239365324,"results":"44","hashOfConfig":"33"},{"size":245,"mtime":1608239365377,"results":"45","hashOfConfig":"33"},{"size":710,"mtime":1608239365414,"results":"46","hashOfConfig":"33"},{"size":328,"mtime":1608239601578,"results":"47","hashOfConfig":"33"},{"size":106,"mtime":1608239601582,"results":"48","hashOfConfig":"33"},{"size":2588,"mtime":1608240783261,"results":"49","hashOfConfig":"33"},{"size":941,"mtime":1608239601489,"results":"50","hashOfConfig":"33"},{"size":515,"mtime":1608239365331,"results":"51","hashOfConfig":"33"},{"size":1616,"mtime":1608239365337,"results":"52","hashOfConfig":"33"},{"size":1448,"mtime":1608239601528,"results":"53","hashOfConfig":"33"},{"size":4523,"mtime":1608239601549,"results":"54","hashOfConfig":"33"},{"size":4532,"mtime":1608244825872,"results":"55","hashOfConfig":"33"},{"size":3850,"mtime":1608239365368,"results":"56","hashOfConfig":"33"},{"size":2587,"mtime":1608239601563,"results":"57","hashOfConfig":"33"},{"size":1090,"mtime":1608239365390,"results":"58","hashOfConfig":"33"},{"size":3840,"mtime":1608239601533,"results":"59","hashOfConfig":"33"},{"size":987,"mtime":1608239365308,"results":"60","hashOfConfig":"33"},{"size":3468,"mtime":1608239601516,"results":"61","hashOfConfig":"33"},{"size":1325,"mtime":1608239365303,"results":"62","hashOfConfig":"33"},{"size":276,"mtime":1608239365316,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1ukoblb",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"66"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/home/vivien/next/projet_final/PyramidRace-React/src/index.jsx",[],["141","142"],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/store.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Components/Footer/index.jsx",["143","144","145"],"import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer id=\"footer\" className=\"footer-area\">\r\n      <div className=\"footer-copyright\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"copyright text-center\">\r\n                <p className=\"text\">\r\n                  THP Project by <Link to=\"/team\">Les Incacahuètes !</Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Components/NavBar/index.jsx",["146","147","148","149","150","151"],"import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logoutSuccess } from \"../../redux/authentication/authActions\";\r\n\r\nconst NavBar = () => {\r\n  const tokenCookie = Cookies.get(\"token\");\r\n  const isLoggedIn = useSelector((state) => state.isLoggedIn);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickLogout = () => {\r\n    fetch(\"https://pyramid-race-api.herokuapp.com/logout\", {\r\n      method: \"delete\",\r\n      Bearer: {\r\n        token: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(Cookies.get(\"token\"));\r\n        Cookies.remove(\"token\");\r\n        dispatch(logoutSuccess());\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"isLoggedIn changed\");\r\n  }, [isLoggedIn]);\r\n\r\n  return (\r\n    <div className=\"navgition navgition-transparent\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <nav className=\"navbar navbar-expand-lg\">\r\n              <Link to=\"/\">\r\n                <img src=\"/assets/images/logo.svg\" alt=\"Logo\"></img>\r\n              </Link>\r\n              <button\r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbarOne\"\r\n                aria-controls=\"navbarOne\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n              >\r\n                <span className=\"toggler-icon\"></span>\r\n                <span className=\"toggler-icon\"></span>\r\n                <span className=\"toggler-icon\"></span>\r\n              </button>\r\n              <div\r\n                className=\"collapse navbar-collapse sub-menu-bar\"\r\n                id=\"navbarOne\"\r\n              >\r\n                <ul className=\"navbar-nav m-auto\">\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/\">Accueil</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"page-scroll\" href=\"/#information\">\r\n                      Informations\r\n                    </a>\r\n                  </li>\r\n                  {tokenCookie && (\r\n                    <>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/gameinfos\">Profil</Link>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/\" onClick={handleClickLogout}>\r\n                          Se déconnecter\r\n                        </Link>\r\n                      </li>\r\n                    </>\r\n                  )}\r\n                  {!tokenCookie && (\r\n                    <>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/sign-up\">S'inscrire</Link>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                        <Link to=\"/login\">Se connecter</Link>\r\n                      </li>\r\n                    </>\r\n                  )}\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"navbar-social d-none d-sm-flex align-items-center\">\r\n                <span>NOS RESEAUX</span>\r\n                <ul>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://www.facebook.com/PyramidRace\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"lni-facebook-filled\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"https://twitter.com/RacePyramid\" target=\"_blank\">\r\n                      {\" \"}\r\n                      <i className=\"lni-twitter-original\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://www.instagram.com/pyramid.race/\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"lni-instagram-original\"></i>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/index.jsx",["152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Signup/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Login/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/404/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Victory/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Team/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Defeat/index.jsx",["166","167","168","169"],"import \"./style.scss\";\nimport React from \"react\";\nimport GameOver from \"./assets/game_over.png\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nconst Defeat = () => {\n  return (\n    <div className=\"Defeat-Page\">\n      <h1 className=\"text-center\"> Tu as perdu, gros naze !</h1>\n      <br />\n      <button className=\"Defeat-button\">\n        <Link to=\"/gameInfos\">Revenir à mon profil ( En rampant )</Link>\n      </button>\n\n      <img className=\"defeat-image\" src={GameOver} />\n      <br />\n    </div>\n  );\n};\n\nexport default Defeat;\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authReducer.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authActions.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/redux/authentication/authTypes.js",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Modal/index.jsx",["170"],"import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement(\"#root\");\r\n\r\nconst ModalDiv = ({ modalIsOpen, closeModal, step }) => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        {step < 2 && (\r\n          <div className=\"col text-center\">\r\n            <h2>Ok, tu as atteint l'étage {step} de la pyramide !</h2>\r\n\r\n            <div>\r\n              C'est vraiment ridicule, ton adversaire n'aura pas de mal à te\r\n              vaincre... va te cacher !\r\n            </div>\r\n            <button className=\"btn btn-warning\" onClick={closeModal}>\r\n              Revenir à mon profil\r\n            </button>\r\n          </div>\r\n        )}\r\n        {step >= 2 && step <= 4 && (\r\n          <div className=\"col text-center\">\r\n            <h2>Pas mal,tu as atteint l'étage {step} de la pyramide !</h2>\r\n            <div>\r\n              Résultat honorable, voyons si ton adversaire peut faire mieux !\r\n            </div>\r\n            <button className=\"btn btn-warning\" onClick={closeModal}>\r\n              Revenir à mon profil\r\n            </button>\r\n          </div>\r\n        )}\r\n        {step === 5 && (\r\n          <div className=\"col text-center\">\r\n            <h2>Tu as atteint l'étage {step} de la pyramide !</h2>\r\n            <div>\r\n              Tu finis à une marche du sommet de la pyramide ! Belle\r\n              performance, ton adversaire va devoir se surpasser !\r\n            </div>\r\n            <button className=\"btn btn-warning\" onClick={closeModal}>\r\n              Revenir à mon profil\r\n            </button>\r\n          </div>\r\n        )}\r\n        {step === 6 && (\r\n          <div className=\"col text-center\">\r\n            <h2>Tu as atteint le sommet de la pyramide !!!</h2>\r\n            <div>\r\n              Bravo ! Le dieu-serpent est fier de toi ! Si ton adversaire ne\r\n              fait pas preuve d'autant de force, tu gagneras cette bataille !\r\n            </div>\r\n            <button className=\"btn btn-warning\" onClick={closeModal}>\r\n              Revenir à mon profil\r\n            </button>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalDiv;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Components/Fetch/index.jsx",["171"],"import React from \"react\";\nimport Cookie from \"js-cookie\";\n\nconst tokenCookie = Cookie.get(\"token\");\n\nexport const fetchOpponent = (playerId, setOpponent) => {\n  fetch(`https://pyramid-race-api.herokuapp.com/users/${playerId}`)\n    .then((response) => response.json())\n    .then((data) => setOpponent(data))\n    .catch((error) => console.log(error));\n};\n\nexport const updateScorePlayer = (playerId, initialScore, victoryStatus) => {\n  let updatedScore;\n  if (victoryStatus === true) {\n    updatedScore = initialScore + 5;\n  } else if (victoryStatus === false) {\n    updatedScore = initialScore - 3;\n  }\n  const data = {\n    user: {\n      score: updatedScore,\n    },\n  };\n  fetch(`https://pyramid-race-api.herokuapp.com/users/${playerId}`, {\n    method: \"put\",\n    headers: {\n      Authorization: `${tokenCookie}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).catch((error) => console.log(error));\n};\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/Countdown/index.jsx",["172"],"import React, { useEffect } from \"react\";\r\n\r\nimport { useCountdownTimer } from \"use-countdown-timer\";\r\n\r\nconst Countdown = ({ onExpire, resetTick }) => {\r\n  const { countdown, reset, start } = useCountdownTimer({\r\n    timer: 1000 * 20000,\r\n    autostart: true,\r\n    onExpire,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (resetTick === 0) {\r\n      return;\r\n    }\r\n    reset();\r\n    start();\r\n  }, [resetTick]);\r\n\r\n  return <div className=\"countdown\">Countdown : {countdown / 1000}</div>;\r\n};\r\n\r\nexport default Countdown;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GamePage/QuestionCard/index.jsx",["173"],"import \"./style.scss\";\nimport React, { useEffect } from \"react\";\n\nconst QuestionCard = ({\n  question,\n  incorrect_answers,\n  correct_answer,\n  nextQuestion,\n}) => {\n  console.log(correct_answer);\n  const questionArray = incorrect_answers;\n  if (questionArray.length < 4) {\n    questionArray.push(correct_answer);\n  }\n\n  const shuffle = (array) => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  useEffect(() => {\n    shuffle(questionArray);\n  }, [correct_answer]);\n\n  return (\n    <>\n      <div className=\"card question-card\" style={{ width: \"18rem\" }}>\n        <div className=\"card-body\">\n          <div className=\"card-text\">\n            <span dangerouslySetInnerHTML={{ __html: question }} />\n            <br />\n            <div className=\"answers\">\n              {questionArray.map((choice) => {\n                return (\n                  <button\n                    className=\"answer-button\"\n                    onClick={() => nextQuestion(choice, correct_answer)}\n                    key={questionArray.indexOf(choice)}\n                  >\n                    <span dangerouslySetInnerHTML={{ __html: choice }} />\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default QuestionCard;\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/JumbotronGameInfos/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/Jumbotron/index.jsx",["174","175"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Cookie from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Jumbotron = () => {\r\n  const userId = useSelector((state) => state.id);\r\n  const tokenCookie = Cookie.get(\"token\");\r\n  const history = useHistory();\r\n  const [possibleOpponents, setPossibleOpponents] = useState([]);\r\n  const [playerScore, setPlayerScore] = useState(0);\r\n\r\n  const categoriesArray = [\r\n    9,\r\n    10,\r\n    11,\r\n    12,\r\n    14,\r\n    15,\r\n    16,\r\n    17,\r\n    18,\r\n    19,\r\n    21,\r\n    22,\r\n    23,\r\n    24,\r\n    26,\r\n    27,\r\n    28,\r\n    31,\r\n    32,\r\n  ];\r\n\r\n  const fetchPossibleOpponents = () => {\r\n    fetch(\r\n      `https://pyramid-race-api.herokuapp.com/users/${userId}/possible_opponents`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setPossibleOpponents(data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      fetchPossibleOpponents();\r\n      fetchPlayerScore();\r\n    }\r\n  }, []);\r\n\r\n  const startGame = () => {\r\n    let difficulty;\r\n    if (playerScore < 200) {\r\n      difficulty = \"easy\";\r\n    } else if (playerScore >= 200 && playerScore < 400) {\r\n      difficulty = \"medium\";\r\n    } else if (playerScore >= 400) {\r\n      difficulty = \"hard\";\r\n    }\r\n    console.log(difficulty);\r\n    const data = {\r\n      game: {\r\n        player1_id: userId,\r\n        player2_id:\r\n          possibleOpponents[\r\n            Math.floor(Math.random() * possibleOpponents.length)\r\n          ].id,\r\n        difficulty: difficulty,\r\n        category:\r\n          categoriesArray[Math.floor(Math.random() * categoriesArray.length)],\r\n      },\r\n    };\r\n\r\n    fetch(`https://pyramid-race-api.herokuapp.com/games`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Authorization: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        history.push(`/games/${response.id}`);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const fetchPlayerScore = () => {\r\n    fetch(`https://pyramid-race-api.herokuapp.com/users/${userId}/games`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let games_won = data.filter((game) => game.winner_id === userId).length;\r\n        let games_lost = data.filter(\r\n          (game) => game.winner_id != userId && game.winner_id !== null\r\n        ).length;\r\n        let playerScore = games_won * 5 - games_lost * 3;\r\n        setPlayerScore(playerScore);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"home\"\r\n      className=\"header-hero bg_cover\"\r\n      style={{ backgroundImage: `url(${\"assets/images/header-bg.jpg\"})` }}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xl-8 col-lg-10\">\r\n            <div className=\"header-content text-center\">\r\n              <h3 className=\"header-title\">\r\n                Bienvenue sur Pyramid <em>Race</em> !\r\n              </h3>\r\n              <h2>Confronte ta culture générale avec d'autres joueurs !</h2>\r\n              <p className=\"text\">\r\n                Prouve que tu es le meilleur en atteignant le haut de la\r\n                pyramide ou tu erreras dans ses labyrinthes jusqu'à ce que tu te\r\n                transformes en burrito avarié !\r\n              </p>\r\n              <ul className=\"header-btn\">\r\n                {userId === null && (\r\n                  <li>\r\n                    <Link to=\"/login\" className=\"main-btn btn-one\">\r\n                      Je veux jouer\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n                {userId !== null && (\r\n                  <li>\r\n                    <Link\r\n                      to=\"/\"\r\n                      className=\"main-btn btn-one\"\r\n                      onClick={startGame}\r\n                    >\r\n                      Je veux jouer\r\n                    </Link>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-shape\">\r\n        <img src=\"assets/images/header-shape.svg\" alt=\"shape\"></img>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jumbotron;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/index.jsx",["176","177","178","179","180"],"import \"./style.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport GamePlayed from \"./GamePlayed\";\nimport PlayerInfos from \"./../PlayerInfos\";\n\nconst GamePlayedList = () => {\n  const userId = useSelector((state) => state.id);\n  const [gamesPlayed, setGamesPlayed] = useState([]);\n  const [gamesToPlay, setGamesToPlay] = useState([]);\n  const [playerStats, setPlayerStats] = useState({});\n  const [gamesPlayedStats, setGamesPlayedStats] = useState([]);\n\n  const fetchGamesPlayed = () => {\n    fetch(`https://pyramid-race-api.herokuapp.com/users/${userId}/games`)\n      .then((response) => response.json())\n      .then((data) => {\n        setGamesPlayedStats(data);\n        let slicedData = data.slice(0, 10);\n        setGamesPlayed(slicedData);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const fetchGamesToPlay = () => {\n    fetch(\n      `https://pyramid-race-api.herokuapp.com/users/${userId}/games_to_play`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setGamesPlayedStats(data);\n        let slicedData = data.slice(0, 10);\n        setGamesToPlay(slicedData);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    fetchGamesPlayed();\n    fetchGamesToPlay();\n  }, []);\n\n  useEffect(() => {\n    let player_stats = {\n      games_played: gamesPlayedStats.length,\n      games_won: gamesPlayedStats.filter((game) => game.winner_id === userId)\n        .length,\n      games_lost: gamesPlayedStats.filter(\n        (game) => game.winner_id != userId && game.winner_id !== null\n      ).length,\n    };\n    setPlayerStats(player_stats);\n  }, [gamesPlayed]);\n\n  return (\n    <div className=\"GameInfoContainer\">\n      <div className=\"game-info-column col-lg-8\">\n        <h1 className=\"text-center\">Parties en cours</h1>\n        <br />\n        <div className=\"list-container\">\n          {gamesToPlay.map((game) => {\n            if (game.winner_id === null && game.player1_id === userId) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player2_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (game.winner_id === null && game.player2_id === userId) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player1_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            }\n          })}\n        </div>\n\n        <h1 className=\"text-center\">Parties terminées</h1>\n        <br />\n        <div className=\"list-container\">\n          {gamesPlayed.map((game) => {\n            if (game.winner_id === userId && game.player1_id === userId) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player2_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (\n              game.winner_id === userId &&\n              game.player2_id === userId\n            ) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player1_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (\n              game.winner_id &&\n              game.winner_id !== userId &&\n              game.player2_id === userId\n            ) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player1_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            } else if (\n              game.winner_id &&\n              game.winner_id !== userId &&\n              game.player1_id === userId\n            ) {\n              return (\n                <GamePlayed\n                  gameId={game.id}\n                  opponentId={game.player2_id}\n                  winner_id={game.winner_id}\n                  key={game.id}\n                />\n              );\n            }\n          })}\n        </div>\n      </div>\n      <div className=\"game-info-column col-lg-3 player-infos-col text-center\">\n        <PlayerInfos player_stats={playerStats} />\n      </div>\n    </div>\n  );\n};\n\nexport default GamePlayedList;\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Home/HomeSection/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Team/components/TeamCards/index.jsx",["181","182","183","184","185","186"],"import React, { useState, useEffect } from \"react\";\nimport \"./style.scss\";\n\nconst TeamCards = () => {\n  return (\n    <div className=\"team-boxed\">\n      <div className=\"container-team\">\n        <h2 className=\"text-center\">L'équipe</h2>\n      </div>\n      <div className=\"row people\">\n        <div className=\"box col-lg-2 item\">\n          <img\n            className=\"rounded-circle\"\n            src=\"https://sites.google.com/site/tzolkin16/_/rsrc/1463172104990/home/dia-de-los-suenos---28-de-agosto/sol_inca.png\"\n          />\n          <h3 className=\"name\">Anthony KRIEF</h3>\n          <p className=\"title\">Actuellement rang Paysan 😖</p>\n          <p className=\"description\">\n            C'est à lui que l'on doit l'aspect général du site. S'il ne vous\n            plait pas, balancez-le du haut de la pyramide pour lui remettre les\n            idées en place !\n          </p>\n        </div>\n\n        <div className=\"box col-lg-2 item\">\n          <img\n            className=\"rounded-circle\"\n            src=\"https://i.pinimg.com/originals/1b/c3/fb/1bc3fbb917115be38324c9d6631e0577.jpg\"\n          />\n          <h3 className=\"name\">Vivien Ploix</h3>\n          <p className=\"title\">Le déterminé 😁 </p>\n          <p className=\"description\">\n            Maître du 'fetch', il s'est arraché les cheveux pour que vous\n            puissiez avoir un jeu fonctionnel ! Il est temps de lui faire une\n            offrande... À vous !\n          </p>\n        </div>\n        <div className=\"box col-lg-2 item\">\n          <img\n            className=\"rounded-circle\"\n            src=\"https://pbs.twimg.com/media/Df0GpkuX4AAKDYi.jpg\"\n          />\n          <h3 className=\"name\">Olivier FITOUSSI</h3>\n          <p className=\"title\">Le fantôme de la pyramide 👻</p>\n          <p className=\"description\">\n            Peut-être que vous le croiserez dans les entrailles de la pyramide !\n            Ouvrez l'oeil !\n          </p>\n        </div>\n        <div className=\"box col-lg-2 item\">\n          <img\n            className=\"rounded-circle\"\n            src=\"https://i.pinimg.com/originals/90/1e/6c/901e6c0b315861b38cfaf18371a99f3f.jpg\"\n          />\n          <h3 className=\"name\">Cindy</h3>\n          <p className=\"title\">La dessinatrice ✍</p>\n          <p className=\"description\">\n            Un grand merci à elle, qui nous à fait les visuels de jeu (persos,\n            pyramide, écrans de victoire et de défaite). Oui, c'est à cause\n            d'elle que votre perso se fait bouffer 😄\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TeamCards;\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/Team/components/Jumbotron/index.jsx",["187","188"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst TeamJumbotron = () => {\r\n  return (\r\n    <div\r\n      id=\"home\"\r\n      className=\"header-hero bg_cover\"\r\n      style={{ backgroundImage: `url(${\"assets/images/header-bg.jpg\"})` }}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xl-8 col-lg-10\">\r\n            <div className=\"header-content text-center\">\r\n              <h3 className=\"header-title\">\r\n                Bienvenue sur la page de l'équipe !\r\n              </h3>\r\n\r\n              <p className=\"text\">\r\n                Pendant deux semaines nous avons travaillé d'arrache pieds afin\r\n                de vous proposer ce jeu. Nous espérons qu'il vous plaira, et que\r\n                vous vous tiendrez au sommet de la pyramide !\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-shape\">\r\n        <img src=\"assets/images/header-shape.svg\" alt=\"shape\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamJumbotron;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/index.jsx",["189","190","191","192"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./style.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Cookie from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PlayerSuggestion from \"./PlayerSuggestion\";\r\n\r\nconst SearchBar = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const userId = useSelector((state) => state.id);\r\n  const tokenCookie = Cookie.get(\"token\");\r\n  const history = useHistory();\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [playerScore, setPlayerScore] = useState(0);\r\n\r\n  //Enables selecting the range of categories in the API and excluding the ones not containing enough questions\r\n  const arrayQuestions = [...Array(32 - 9 + 1)].map((item, index) => 9 + index);\r\n  const categoriesToBeRemoved = [13, 20, 25, 29, 30];\r\n  const categoriesArray = arrayQuestions.filter(\r\n    (item) => !categoriesToBeRemoved.includes(item)\r\n  );\r\n\r\n  const handleInputChange = (e) => {\r\n    const { value } = e.currentTarget;\r\n    setInput(value.replace(/\\s/, \"\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (input.length >= 3) {\r\n      fetch(`https://pyramid-race-api.herokuapp.com/users?pseudo=${input}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setSuggestions(data || []);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      setSuggestions([]);\r\n    }\r\n  }, [input]);\r\n\r\n  const closeSearch = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const startGame = (opponentId) => {\r\n    let difficulty;\r\n    if (playerScore < 200) {\r\n      difficulty = \"easy\";\r\n    } else if (playerScore >= 200 && playerScore < 400) {\r\n      difficulty = \"medium\";\r\n    } else if (playerScore >= 400) {\r\n      difficulty = \"hard\";\r\n    }\r\n    console.log(difficulty);\r\n    const data = {\r\n      game: {\r\n        player1_id: userId,\r\n        player2_id: opponentId,\r\n        difficulty: difficulty,\r\n        category:\r\n          categoriesArray[Math.floor(Math.random() * categoriesArray.length)],\r\n      },\r\n    };\r\n\r\n    fetch(`https://pyramid-race-api.herokuapp.com/games`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Authorization: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        history.push(`/games/${response.id}`);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const fetchPlayerScore = () => {\r\n    fetch(`https://pyramid-race-api.herokuapp.com/users/${userId}/games`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let games_won = data.filter((game) => game.winner_id === userId).length;\r\n        let games_lost = data.filter(\r\n          (game) => game.winner_id != userId && game.winner_id !== null\r\n        ).length;\r\n        let playerScore = games_won * 5 - games_lost * 3;\r\n        setPlayerScore(playerScore);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPlayerScore();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container searchbar navbar-form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Chercher un joueur\"\r\n        onChange={handleInputChange}\r\n        value={input}\r\n      />\r\n      <div className=\"search\" onClick={closeSearch}></div>\r\n      <div className=\"suggestions\">\r\n        {suggestions.map((suggestion) => {\r\n          if (suggestion.id != userId) {\r\n            return (\r\n              <PlayerSuggestion\r\n                pseudo={suggestion.pseudo}\r\n                onClick={() => {\r\n                  startGame(suggestion.id);\r\n                }}\r\n                key={suggestion.id}\r\n              />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/PlayerInfos/index.jsx",[],"/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/GamePlayedList/GamePlayed/index.jsx",["193","194"],"import \"./style.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Cookie from \"js-cookie\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst GamePlayed = ({ opponentId, winner_id, gameId }) => {\r\n  const tokenCookie = Cookie.get(\"token\");\r\n  const [opponent, setOpponent] = useState({});\r\n  const history = useHistory();\r\n  const userId = useSelector((state) => state.id);\r\n  const categoriesArray = [\r\n    9,\r\n    10,\r\n    11,\r\n    12,\r\n    14,\r\n    15,\r\n    16,\r\n    17,\r\n    18,\r\n    19,\r\n    21,\r\n    22,\r\n    23,\r\n    24,\r\n    26,\r\n    27,\r\n    28,\r\n    31,\r\n    32,\r\n  ];\r\n\r\n  const getOpponentInfos = () => {\r\n    fetch(`https://pyramid-race-api.herokuapp.com/users/${opponentId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setOpponent(data);\r\n      })\r\n      .catch((error) => alert(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOpponentInfos();\r\n  }, []);\r\n\r\n  const startGame = (opponent_id) => {\r\n    const data = {\r\n      game: {\r\n        player1_id: userId,\r\n        player2_id: opponent_id,\r\n        difficulty: \"medium\",\r\n        category:\r\n          categoriesArray[Math.floor(Math.random() * categoriesArray.length)],\r\n      },\r\n    };\r\n\r\n    fetch(`https://pyramid-race-api.herokuapp.com/games`, {\r\n      method: \"post\",\r\n      headers: {\r\n        Authorization: `${tokenCookie}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        history.push(`/games/${response.id}`);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container card-game\">\r\n      <div className=\"row align-middle\">\r\n        <div className=\"col-md-8 col-lg-6 column\">\r\n          <div className=\"card gr-1\">\r\n            <div className=\"txt\">\r\n              {winner_id != opponentId && winner_id != null && (\r\n                <div>\r\n                  <h1>\r\n                    <b>Victoire</b>\r\n                  </h1>\r\n                  <p>\r\n                    Tu es le grand gagnant de cette partie ! (calme-toi quand\r\n                    même)\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {winner_id === opponentId && (\r\n                <div>\r\n                  <h1>Défaite</h1>\r\n                  <p>\r\n                    Tu as perdu, à présent nous te regarderons avec le mépris\r\n                    que tu mérites !\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {winner_id === null && (\r\n                <div>\r\n                  <h1>\r\n                    <b>En cours</b>\r\n                  </h1>\r\n                  <p>La partie n'est pas encore terminée ! Quel suspense !</p>\r\n                </div>\r\n              )}\r\n\r\n              <small>Adversaire : {opponent.pseudo}</small>\r\n            </div>\r\n            {winner_id === null && (\r\n              <Link to={{ pathname: `/games/${gameId}` }}>Jouer</Link>\r\n            )}\r\n            {winner_id !== null && (\r\n              <Link to=\"/\" onClick={() => startGame(opponentId)}>\r\n                Rejouer\r\n              </Link>\r\n            )}\r\n\r\n            <div className=\"ico-card\">\r\n              <i className=\"lni lni-pyramids\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePlayed;\r\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/PlayerInfos/ProgressBar/index.jsx",["195"],"import React, { useState, useEffect } from \"react\";\nimport \"./style.scss\";\nimport { useSelector } from \"react-redux\";\n//@ts-ignore\n\nconst ProgressBar = ({ playerScore }) => {\n  const [width, setWidth] = useState(0);\n  const [level, setLevel] = useState(\"\");\n  useEffect(() => {\n    if (playerScore < 0) {\n      setLevel(\"Cafard de la pyramide\");\n      setWidth(playerScore + 100);\n    } else if (playerScore >= 0 && playerScore < 100) {\n      setLevel(\"Paysan\");\n      setWidth(playerScore);\n    } else if (playerScore >= 100 && playerScore < 200) {\n      setLevel(\"Guerrier\");\n      setWidth(playerScore - 100);\n    } else if (playerScore >= 200 && playerScore < 300) {\n      setLevel(\"Grand pretre\");\n      setWidth(playerScore - 200);\n    } else if (playerScore >= 300 && playerScore < 400) {\n      setLevel(\"Noble\");\n      setWidth(playerScore - 300);\n    } else if (playerScore >= 400) {\n      setLevel(\"Roi\");\n      setWidth(playerScore - 400);\n    }\n  }, [playerScore]);\n\n  return (\n    <div className=\"container-progress\">\n      <div className=\"progress\">\n        <div\n          className=\"progress-bar progress-bar-danger progress-bar-striped active\"\n          style={{ width: `${width}%` }}\n        ></div>\n      </div>\n      <h5 className=\"mb-3\">Rang : {level}</h5>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","/home/vivien/next/projet_final/PyramidRace-React/src/Pages/GameInfos/SearchBar/PlayerSuggestion/index.jsx",[],{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":3,"column":27,"nodeType":"202","messageId":"203","endLine":3,"endColumn":33},{"ruleId":"200","severity":1,"message":"204","line":3,"column":35,"nodeType":"202","messageId":"203","endLine":3,"endColumn":40},{"ruleId":"200","severity":1,"message":"205","line":3,"column":42,"nodeType":"202","messageId":"203","endLine":3,"endColumn":48},{"ruleId":"200","severity":1,"message":"201","line":2,"column":27,"nodeType":"202","messageId":"203","endLine":2,"endColumn":33},{"ruleId":"200","severity":1,"message":"204","line":2,"column":35,"nodeType":"202","messageId":"203","endLine":2,"endColumn":40},{"ruleId":"200","severity":1,"message":"205","line":2,"column":42,"nodeType":"202","messageId":"203","endLine":2,"endColumn":48},{"ruleId":"206","severity":1,"message":"207","line":99,"column":23,"nodeType":"208","endLine":99,"endColumn":38},{"ruleId":"206","severity":1,"message":"207","line":106,"column":63,"nodeType":"208","endLine":106,"endColumn":78},{"ruleId":"206","severity":1,"message":"207","line":114,"column":23,"nodeType":"208","endLine":114,"endColumn":38},{"ruleId":"200","severity":1,"message":"209","line":2,"column":46,"nodeType":"202","messageId":"203","endLine":2,"endColumn":61},{"ruleId":"210","severity":1,"message":"211","line":56,"column":6,"nodeType":"212","endLine":56,"endColumn":17,"suggestions":"213"},{"ruleId":"210","severity":1,"message":"214","line":60,"column":6,"nodeType":"212","endLine":60,"endColumn":8,"suggestions":"215"},{"ruleId":"210","severity":1,"message":"216","line":75,"column":6,"nodeType":"212","endLine":75,"endColumn":19,"suggestions":"217"},{"ruleId":"210","severity":1,"message":"218","line":79,"column":6,"nodeType":"212","endLine":79,"endColumn":12,"suggestions":"219"},{"ruleId":"220","severity":1,"message":"221","line":148,"column":27,"nodeType":"222","messageId":"223","endLine":148,"endColumn":29},{"ruleId":"210","severity":1,"message":"224","line":244,"column":6,"nodeType":"212","endLine":244,"endColumn":19,"suggestions":"225"},{"ruleId":"200","severity":1,"message":"226","line":246,"column":9,"nodeType":"202","messageId":"203","endLine":246,"endColumn":18},{"ruleId":"210","severity":1,"message":"227","line":359,"column":6,"nodeType":"212","endLine":359,"endColumn":19,"suggestions":"228"},{"ruleId":"210","severity":1,"message":"229","line":371,"column":6,"nodeType":"212","endLine":371,"endColumn":24,"suggestions":"230"},{"ruleId":"210","severity":1,"message":"227","line":378,"column":6,"nodeType":"212","endLine":378,"endColumn":8,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":413,"column":9,"nodeType":"234","endLine":413,"endColumn":67},{"ruleId":"232","severity":1,"message":"233","line":419,"column":11,"nodeType":"234","endLine":419,"endColumn":49},{"ruleId":"232","severity":1,"message":"233","line":426,"column":11,"nodeType":"234","endLine":426,"endColumn":49},{"ruleId":"200","severity":1,"message":"201","line":4,"column":27,"nodeType":"202","messageId":"203","endLine":4,"endColumn":33},{"ruleId":"200","severity":1,"message":"204","line":4,"column":35,"nodeType":"202","messageId":"203","endLine":4,"endColumn":40},{"ruleId":"200","severity":1,"message":"205","line":4,"column":42,"nodeType":"202","messageId":"203","endLine":4,"endColumn":48},{"ruleId":"232","severity":1,"message":"233","line":15,"column":7,"nodeType":"234","endLine":15,"endColumn":54},{"ruleId":"200","severity":1,"message":"235","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"236","line":1,"column":8,"nodeType":"202","messageId":"203","endLine":1,"endColumn":13},{"ruleId":"210","severity":1,"message":"237","line":18,"column":6,"nodeType":"212","endLine":18,"endColumn":17,"suggestions":"238"},{"ruleId":"210","severity":1,"message":"239","line":34,"column":6,"nodeType":"212","endLine":34,"endColumn":22,"suggestions":"240"},{"ruleId":"210","severity":1,"message":"241","line":52,"column":6,"nodeType":"212","endLine":52,"endColumn":8,"suggestions":"242"},{"ruleId":"220","severity":1,"message":"221","line":99,"column":36,"nodeType":"222","messageId":"223","endLine":99,"endColumn":38},{"ruleId":"210","severity":1,"message":"243","line":41,"column":6,"nodeType":"212","endLine":41,"endColumn":8,"suggestions":"244"},{"ruleId":"220","severity":1,"message":"221","line":49,"column":34,"nodeType":"222","messageId":"223","endLine":49,"endColumn":36},{"ruleId":"210","severity":1,"message":"245","line":53,"column":6,"nodeType":"212","endLine":53,"endColumn":19,"suggestions":"246"},{"ruleId":"247","severity":1,"message":"248","line":61,"column":35,"nodeType":"249","messageId":"250","endLine":61,"endColumn":37},{"ruleId":"247","severity":1,"message":"248","line":87,"column":35,"nodeType":"249","messageId":"250","endLine":87,"endColumn":37},{"ruleId":"200","severity":1,"message":"235","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"251","line":1,"column":27,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"232","severity":1,"message":"233","line":12,"column":11,"nodeType":"234","endLine":15,"endColumn":13},{"ruleId":"232","severity":1,"message":"233","line":26,"column":11,"nodeType":"234","endLine":29,"endColumn":13},{"ruleId":"232","severity":1,"message":"233","line":39,"column":11,"nodeType":"234","endLine":42,"endColumn":13},{"ruleId":"232","severity":1,"message":"233","line":51,"column":11,"nodeType":"234","endLine":54,"endColumn":13},{"ruleId":"200","severity":1,"message":"235","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"251","line":1,"column":27,"nodeType":"202","messageId":"203","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"221","line":86,"column":36,"nodeType":"222","messageId":"223","endLine":86,"endColumn":38},{"ruleId":"210","severity":1,"message":"252","line":96,"column":6,"nodeType":"212","endLine":96,"endColumn":8,"suggestions":"253"},{"ruleId":"247","severity":1,"message":"248","line":108,"column":39,"nodeType":"249","messageId":"250","endLine":108,"endColumn":41},{"ruleId":"220","severity":1,"message":"221","line":109,"column":29,"nodeType":"222","messageId":"223","endLine":109,"endColumn":31},{"ruleId":"210","severity":1,"message":"254","line":45,"column":6,"nodeType":"212","endLine":45,"endColumn":8,"suggestions":"255"},{"ruleId":"220","severity":1,"message":"221","line":79,"column":26,"nodeType":"222","messageId":"223","endLine":79,"endColumn":28},{"ruleId":"200","severity":1,"message":"256","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":21},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'useLayoutEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentQuestionIndex'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentQuestion' needs the current value of 'currentQuestionIndex'.","ArrayExpression",["259"],"React Hook useEffect has a missing dependency: 'fetchGame'. Either include it or remove the dependency array.",["260"],"React Hook useEffect has missing dependencies: 'destroyGame', 'fetchHistoryPlayer1', 'fetchQuestions', 'forfeitGame', and 'userId'. Either include them or remove the dependency array.",["261"],"React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.",["262"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'count3' and 'gameEnd'. Either include them or remove the dependency array. You can also do a functional update 'setCount3(c => ...)' if you only need 'count3' in the 'setCount3' call.",["263"],"'alertUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'movePlayer1'. Either include it or remove the dependency array.",["264"],"React Hook useEffect has missing dependencies: 'count2', 'gameHistories', and 'movePlayer2'. Either include them or remove the dependency array. You can also do a functional update 'setCount2(c => ...)' if you only need 'count2' in the 'setCount2' call.",["265"],["266"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'reset' and 'start'. Either include them or remove the dependency array.",["267"],"React Hook useEffect has a missing dependency: 'questionArray'. Either include it or remove the dependency array.",["268"],"React Hook useEffect has missing dependencies: 'fetchPlayerScore', 'fetchPossibleOpponents', and 'userId'. Either include them or remove the dependency array.",["269"],"React Hook useEffect has missing dependencies: 'fetchGamesPlayed' and 'fetchGamesToPlay'. Either include them or remove the dependency array.",["270"],"React Hook useEffect has missing dependencies: 'gamesPlayedStats' and 'userId'. Either include them or remove the dependency array.",["271"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchPlayerScore'. Either include it or remove the dependency array.",["272"],"React Hook useEffect has a missing dependency: 'getOpponentInfos'. Either include it or remove the dependency array.",["273"],"'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},"Update the dependencies array to be: [currentQuestionIndex, questions]",{"range":"304","text":"305"},"Update the dependencies array to be: [fetchGame]",{"range":"306","text":"307"},"Update the dependencies array to be: [count, destroyGame, fetchHistoryPlayer1, fetchQuestions, forfeitGame, game, userId]",{"range":"308","text":"309"},"Update the dependencies array to be: [count, game]",{"range":"310","text":"311"},"Update the dependencies array to be: [count3, gameEnd, timePlayer1]",{"range":"312","text":"313"},"Update the dependencies array to be: [currentStep, movePlayer1]",{"range":"314","text":"315"},"Update the dependencies array to be: [count2, firstGameHistory, gameHistories, movePlayer2]",{"range":"316","text":"317"},"Update the dependencies array to be: [movePlayer1]",{"range":"318","text":"319"},"Update the dependencies array to be: [reset, resetTick, start]",{"range":"320","text":"321"},"Update the dependencies array to be: [correct_answer, questionArray]",{"range":"322","text":"323"},"Update the dependencies array to be: [fetchPlayerScore, fetchPossibleOpponents, userId]",{"range":"324","text":"325"},"Update the dependencies array to be: [fetchGamesPlayed, fetchGamesToPlay]",{"range":"326","text":"327"},"Update the dependencies array to be: [gamesPlayed, gamesPlayedStats, userId]",{"range":"328","text":"329"},"Update the dependencies array to be: [fetchPlayerScore]",{"range":"330","text":"331"},"Update the dependencies array to be: [getOpponentInfos]",{"range":"332","text":"333"},[2172,2183],"[currentQuestionIndex, questions]",[2229,2231],"[fetchGame]",[2579,2592],"[count, destroyGame, fetchHistoryPlayer1, fetchQuestions, forfeitGame, game, userId]",[2646,2652],"[count, game]",[7451,7464],"[count3, gameEnd, timePlayer1]",[10639,10652],"[currentStep, movePlayer1]",[10871,10889],"[count2, firstGameHistory, gameHistories, movePlayer2]",[11053,11055],"[movePlayer1]",[390,401],"[reset, resetTick, start]",[767,783],"[correct_answer, questionArray]",[1134,1136],"[fetchPlayerScore, fetchPossibleOpponents, userId]",[1306,1308],"[fetchGamesPlayed, fetchGamesToPlay]",[1672,1685],"[gamesPlayed, gamesPlayedStats, userId]",[3074,3076],"[fetchPlayerScore]",[971,973],"[getOpponentInfos]"]